name: Issue status → Slack

on:
  issues:
    types: [labeled]
  workflow_dispatch: {}   # valgfri: gjør at du kan kjøre manuelt

permissions:
  contents: read
  issues: read

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Decide recipients and message
        id: decide
        uses: actions/github-script@v7
        env:
          HENNING_ID: U02M2VD4TGF
          SIGURD_ID:  U071XLNGX0C
          REIDAR_ID:  U071XLNT7FE
          ARILD_ID:   U05QQN2LCJU
          GEIR_ID:    U071EKRU97H
        with:
          script: |
            const label = (context.payload.label?.name || '').trim().toLowerCase();
            const issue = context.payload.issue;
            const url = issue.html_url;
            const title = issue.title;
            const number = issue.number;

            const assignees = (issue.assignees || []).map(a => (a.login || '').toLowerCase());
            const hasHenning = assignees.includes('promises');
            const hasSigurd  = assignees.includes('sigurdne');

            const isReadyForTest = ['klar for testing','klar for test'].includes(label);
            const isTestFailed   = label === 'test feilet';
            const isReadyStage   = label === 'klar for stage';
            const isProdAll      = ['klar for prod - alle','prod deploy alle'].includes(label);
            const isProdInst     = ['klar for prod - instans','prod deploy stavanger','prod deploy bergen'].includes(label);

            let mentions = [];
            let message  = null;

            if (isReadyForTest) {
              mentions = [process.env.ARILD_ID, process.env.GEIR_ID];
              message  = `[#${number}] “${title}” er *Klar for testing* (deployet i Test). ${url}`;
            } else if (isTestFailed || isReadyStage) {
              if (hasHenning) mentions = [process.env.HENNING_ID];
              else if (hasSigurd) mentions = [process.env.SIGURD_ID];
              const prefix = isTestFailed ? 'TEST FEILET' : 'Godkjent i test – Klar for Stage';
              message = `[#${number}] ${prefix}: “${title}”. ${url}`;
            } else if (isProdAll || isProdInst) {
              mentions = [process.env.REIDAR_ID];
              message  = `[#${number}] ${context.payload.label.name}: “${title}”. ${url}`;
            }

            if (!message) {
              core.setOutput('skip','true');
            } else {
              core.setOutput('skip','false');
              core.setOutput('mentions', mentions.filter(Boolean).map(id => `<@${id}>`).join(' '));
              core.setOutput('message', message);
            }

  - name: Post to Slack (no preview)
  if: steps.decide.outputs.skip == 'false'
  uses: slackapi/slack-github-action@v1.24.0
  with:
    channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
    slack-message: >-
      ${{ steps.decide.outputs.mentions }} ${{ steps.decide.outputs.message }}
    payload: |
      {
        "unfurl_links": false,
        "unfurl_media": false
      }
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
