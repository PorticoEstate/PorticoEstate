name: Issue status → Slack (DM)

on:
  issues:
    types: [labeled]
  workflow_dispatch: {}

permissions:
  contents: read
  issues: read

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Build DM text (send to Arild for now)
        id: decide
        uses: actions/github-script@v7
        env:
          ARILD_ID: U05QQN2LCJU
        with:
          script: |
            const node = context.payload.issue;
            if (!node) { core.setOutput('skip','true'); return; }

            const label = (context.payload.label?.name || '').trim().toLowerCase();
            const { html_url:url, title, number } = node;

            const isReadyForTest = ['klar for testing','klar for test'].includes(label);
            const isTestFailed   = label === 'test feilet';
            const isReadyStage   = label === 'klar for stage';
            const isProdAll      = ['klar for prod - alle','prod deploy alle'].includes(label);
            const isProdInst     = ['klar for prod - instans','prod deploy stavanger','prod deploy bergen'].includes(label);

            let message = null;
            if (isReadyForTest) {
              message = `[#${number}] “${title}” er *Klar for testing* (deployet i Test). ${url}`;
            } else if (isTestFailed || isReadyStage) {
              const prefix = isTestFailed ? 'TEST FEILET' : 'Godkjent i test – Klar for Stage';
              message = `[#${number}] ${prefix}: “${title}”. ${url}`;
            } else if (isProdAll || isProdInst) {
              message = `[#${number}] ${context.payload.label.name}: “${title}”. ${url}`;
            }

            if (!message) { core.setOutput('skip','true'); return; }
            core.setOutput('skip','false');
            core.setOutput('recipient', process.env.ARILD_ID); // test: alltid Arild
            core.setOutput('message', message);

      - name: Send DM (no preview)
        if: steps.decide.outputs.skip == 'false'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ steps.decide.outputs.recipient }}   # Bruker-ID = DM til person
          payload: |
            {
              "text": "${{ steps.decide.outputs.message }}",
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
