name: Issue status → Slack (C05PUDLBV38)

on:
  issues:
    types: [labeled]
  workflow_dispatch: {}

permissions:
  contents: read
  issues: read

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Decide recipients and message
        id: decide
        uses: actions/github-script@v7
        env:
          # Slack user IDs
          ARILD_ID:   U05QQN2LCJU
          GEIR_ID:    U071EKRU97H
          HENNING_ID: U02M2VD4TGF
          SIGURD_ID:  U071XLNGX0C
          REIDAR_ID:  U071XLNT7FE
        with:
          script: |
            const issue = context.payload.issue;
            if (!issue) { core.setOutput('skip','true'); return; }

            // Normaliser label ("–"/"—" → "-", multiple spaces → one)
            const raw = (context.payload.label?.name || '').trim();
            const l = raw
              .toLowerCase()
              .replace(/[\u2013\u2014]/g, '-')  // en/em dash -> hyphen
              .replace(/\s+/g, ' ')
              .trim();

            const { html_url:url, title, number } = issue;

            // Assignees
            const assignees = (issue.assignees || []).map(a => (a.login || '').toLowerCase());
            const hasHenning = assignees.includes('promises');
            const hasSigurd  = assignees.includes('sigurdne');

            // Match nye statuser
            const isReadyTest_Test   = (l === 'klar for test - test');
            const isFail_Test        = (l === 'test feilet - test');
            const isReadyStage       = (l === 'klar for stage');
            const isReadyTest_Stage  = (l === 'klar for test - stage');
            const isFail_Stage       = (l === 'test feilet - stage');
            const isReadyProd        = (l === 'klar for prod');

            let mentions = [];
            let message  = null;

            if (isReadyTest_Test) {
              mentions = [process.env.ARILD_ID, process.env.GEIR_ID];
              message  = `[#${number}] “${title}” er *Klar for test – Test*. ${url}`;
            } else if (isReadyTest_Stage) {
              mentions = [process.env.ARILD_ID, process.env.GEIR_ID];
              message  = `[#${number}] “${title}” er *Klar for test – Stage*. ${url}`;
            } else if (isFail_Test || isFail_Stage || isReadyStage) {
              // Henning prioriteres hvis begge er assignees
              if (hasHenning) mentions = [process.env.HENNING_ID];
              else if (hasSigurd) mentions = [process.env.SIGURD_ID];
              const prefix =
                isReadyStage ? 'Klar for Stage'
                : (isFail_Test ? 'Test feilet – Test' : 'Test feilet – Stage');
              message = `[#${number}] ${prefix}: “${title}”. ${url}`;
            } else if (isReadyProd) {
              mentions = [process.env.REIDAR_ID];
              message  = `[#${number}] Klar for prod: “${title}”. ${url}`;
            }

            if (!message || mentions.length === 0) {
              core.setOutput('skip','true');
            } else {
              core.setOutput('skip','false');
              core.setOutput('mentions', mentions.map(id => `<@${id}>`).join(' '));
              core.setOutput('message', message);
            }

      - name: Post to Slack (no preview)
        if: steps.decide.outputs.skip == 'false'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: C05PUDLBV38  # ny kanal
          payload: |
            {
              "text": "${{ steps.decide.outputs.mentions }} ${{ steps.decide.outputs.message }}",
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
