/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/application-cart.js":
/*!********************************************!*\
  !*** ./src/components/application-cart.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApplicationCart: () => (/* binding */ ApplicationCart)\n/* harmony export */ });\n/* harmony import */ var _helpers_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/util.js */ \"./src/helpers/util.js\");\n\nclass ApplicationsCartModel {\n  constructor() {\n    this.applicationCartItems = ko.observableArray([]);\n    this.applicationCartItemsEmpty = ko.observable(false);\n    this.visible = ko.observable(true);\n    this.cartElementExpanded = ko.observable(true);\n    this.initializeCart();\n  }\n  initializeCart() {\n    this.getApplicationsCartItems();\n  }\n  toggleCartExpansion() {\n    this.cartElementExpanded(!this.cartElementExpanded());\n  }\n  deleteItem(item) {\n    console.log(\"got delete request\");\n    const requestUrl = (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.phpGWLink)('bookingfrontend/', {\n      menuaction: \"bookingfrontend.uiapplication.delete_partial\"\n    }, true);\n    if (confirm('Do you want to delete this application?')) {\n      fetch(requestUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: item.id\n        })\n      }).then(response => response.json()).then(() => this.getApplicationsCartItems()).catch(error => console.error('Error:', error));\n    }\n  }\n  getApplicationsCartItems() {\n    const getJsonURL = (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.phpGWLink)('bookingfrontend/', {\n      menuaction: \"bookingfrontend.uiapplication.get_partials\"\n    }, true);\n    fetch(getJsonURL).then(response => response.json()).then(data => this.updateCartItems(data)).catch(error => console.error('Error fetching cart items:', error));\n  }\n  updateCartItems(data) {\n    const {\n      list,\n      total_sum\n    } = data;\n    if (total_sum) {\n      // document.getElementById(\"total_sum\").textContent = total_sum.toFixed(2);\n      // document.getElementById(\"total_sum_block\").style.display = 'block';\n    }\n    this.applicationCartItemsEmpty(list.length < 1);\n    this.applicationCartItems(list.map(item => {\n      return {\n        ...item,\n        dates: item.dates.map(dateObj => {\n          const currentStartDate = new Date(dateObj.from_.replace(\" \", \"T\"));\n          currentStartDate.setHours(dateObj.from_.substring(11, 13));\n          currentStartDate.setMinutes(dateObj.from_.substring(14, 16));\n          const currentEndDate = new Date(dateObj.to_.replace(\" \", \"T\"));\n          currentEndDate.setHours(dateObj.to_.substring(11, 13));\n          currentEndDate.setMinutes(dateObj.to_.substring(14, 16));\n          return {\n            date: formatSingleDateWithoutHours(currentStartDate),\n            from_: dateObj.from_,\n            to_: dateObj.to_,\n            periode: formatPeriodeHours(currentStartDate, currentEndDate)\n          };\n        }),\n        resources: ko.observableArray(item.resources.map(res => ({\n          ...res\n        }))),\n        joinedResources: item.resources.map(res => res.name).join(\", \")\n      };\n    }));\n  }\n}\nlet ApplicationCart = new ApplicationsCartModel();\n(0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.onDocumentReady)(() => {\n  const elem = document.getElementById('application-cart-container') || document.getElementById(\"applications-cart-content\");\n  if (elem) {\n    console.log(\"INITIALISING CART\");\n    ko.applyBindings(ApplicationCart, elem);\n  }\n});\n\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/application-cart.js?");

/***/ }),

/***/ "./src/components/map-modal.js":
/*!*************************************!*\
  !*** ./src/components/map-modal.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/hash */ \"./src/helpers/hash.js\");\n\nconst removeTrailingComma = str => {\n  if (str.endsWith(',')) {\n    str = str.slice(0, -1);\n  }\n  return str;\n};\nko.components.register('map-modal', {\n  viewModel: {\n    createViewModel: function (params, componentInfo) {\n      const ViewModel = params => {\n        let mapParts = componentInfo.templateNodes.map(a => a.textContent);\n        if (mapParts.length === 1) {\n          if (mapParts[0].includes('\\n')) {\n            mapParts = mapParts[0].split('\\n');\n          }\n        }\n        mapParts = mapParts.map(text => removeTrailingComma(text.trim()));\n        self.mapParts = ko.observableArray(mapParts);\n        self.randomHash = ko.observable((0,_helpers_hash__WEBPACK_IMPORTED_MODULE_0__.GenerateRandomHash)());\n\n        // self.content = params.content\n        self.descriptionExpanded = ko.observable(false);\n        self.toggleDescription = () => {\n          self.descriptionExpanded(!self.descriptionExpanded());\n        };\n        self.shortPath = ko.computed(() => {\n          return self.mapParts().slice(0, 2).join(', ');\n        });\n        self.longPath = ko.computed(() => {\n          return `https://maps.google.com/maps?f=q&source=s_q&hl=no&output=embed&geocode=&q=${self.mapParts().join(',')}`;\n        });\n        self.openModal = () => {\n          $('#mapModal' + randomHash()).modal('show');\n        };\n        self.closeModal = () => {\n          $('#mapModal' + randomHash()).modal('hide');\n        };\n      };\n      return ViewModel(params);\n    }\n  },\n  // language=HTML\n  template: `\n        <button type=\"button\" class=\"pe-btn pe-btn--transparent link-text link-text-secondary p-0\"\n                data-bind=\"click: function() { openModal() }\">\n            <div class=\"text-primary d-flex gap-1 align-items-center\">\n                <i class=\"fa-solid fa-map-pin\" style=\"font-size: 1rem\"></i>\n                <span class=\"text-label\" data-bind=\"text: shortPath\"></span>\n            </div>\n        </button>\n\n        <div class=\"modal fade\" data-bind=\"attr: {id: 'mapModal' + randomHash()}\" tabindex=\"-1\"\n             aria-labelledby=\"mapModal\"\n             aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-xl\" style=\"height: 100%\">\n                <div class=\"modal-content\" style=\"height: 80%;\">\n                    <div class=\"modal-header border-0\">\n                        <button type=\"button\" class=\"btn-close text-grey-light\" data-bs-dismiss=\"modal\"\n                                aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body d-flex justify-content-center pt-0 pb-4\">\n                        <div style=\"display: flex; justify-content: center; align-items: stretch; width: 100%;\">\n                            <iframe id=\"iframeMap\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"\n                                    style=\"width: 100%;\" data-bind=\"attr:{src: longPath()}\">\n                            </iframe>\n                        </div>\n                        <br/>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    `\n});\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/map-modal.js?");

/***/ }),

/***/ "./src/components/time-picker.js":
/*!***************************************!*\
  !*** ./src/components/time-picker.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_withAfterRender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/withAfterRender */ \"./src/helpers/withAfterRender.js\");\n/* harmony import */ var _helpers_withAfterRender__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_helpers_withAfterRender__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction generateTimeOptions() {\n  let times = [];\n  for (let h = 0; h < 24; h++) {\n    for (let m = 0; m < 60; m += 15) {\n      let hour = h.toString().padStart(2, '0');\n      let minute = m.toString().padStart(2, '0');\n      times.push(`${hour}:${minute}`);\n    }\n  }\n  return times;\n}\nko.components.register('time-picker', {\n  viewModel: function (params) {\n    const self = this;\n    self.selectedTime = params.selectedTime || ko.observable('');\n    self.placeholderText = params.placeholderText || \"Choose time...\"; // Default to \"Choose time...\" if not provided\n    let dropdown;\n    self.timeOptions = ko.observableArray(generateTimeOptions());\n    self.showDropdown = function () {\n      dropdown.style.display = 'block';\n      const timeslotHeight = dropdown.children[0].offsetHeight; // Assuming all timeslot divs are of the same height\n      const selectedTimeValue = self.selectedTime() || '14:30'; // Use '14:30' as default if no time is selected\n      const timeOptionsArray = ko.unwrap(self.timeOptions); // Convert observable array to regular array\n\n      const index = timeOptionsArray.indexOf(selectedTimeValue); // Get the index of the currently selected time or '14:30' if none is selected\n\n      dropdown.scrollTo({\n        top: timeslotHeight * index\n      }); // Scroll to the position of the selected time or '14:30'\n    };\n    self.hideDropdown = function () {\n      dropdown.style.display = 'none';\n    };\n\n    // Add a slight delay before hiding dropdown to allow for selectTime to run\n    self.delayedHideDropdown = function () {\n      setTimeout(self.hideDropdown, 150);\n    };\n    self.selectTime = function (time) {\n      self.selectedTime(time);\n      self.hideDropdown();\n    };\n    self.formatTime = function () {\n      const time = self.selectedTime();\n      const validFormats = /^(\\d{1,2})(?:[.: ]*(\\d{2}))?$/;\n      const match = time.match(validFormats);\n      if (match) {\n        const hours = parseInt(match[1]);\n        const minutes = match[2] ? parseInt(match[2]) : 0;\n        if (hours >= 0 && hours < 24 && minutes >= 0 && minutes < 60) {\n          self.selectedTime(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`);\n        } else {\n          self.selectedTime('');\n        }\n      } else {\n        self.selectedTime('');\n      }\n    };\n    self.afterRender = function (container) {\n      const timeInput = container.querySelector(\".timeInput\");\n      dropdown = container.querySelector(\".timeDropdown\");\n      container.addEventListener('focus', self.showDropdown, true);\n      container.addEventListener('blur', self.delayedHideDropdown, true);\n      timeInput.addEventListener('focus', self.showDropdown);\n      timeInput.addEventListener('blur', self.formatTime);\n      dropdown.addEventListener('click', function (event) {\n        if (event.target.matches('.timeDropdown > div')) {\n          self.selectTime(event.target.textContent);\n        }\n      });\n      timeInput.addEventListener('keydown', function (event) {\n        if (event.keyCode === 13) {\n          self.selectedTime(timeInput.value);\n          self.formatTime();\n          event.preventDefault();\n        }\n      });\n    };\n  },\n  template: `\n<!--  \t<div class=\"dropdownContainer\"  data-bind=\"withAfterRender: { afterRender: $component.afterRender}\">-->\n<!--        <input type=\"text\" class=\"timeInput\" placeholder=\"Choose time...\" data-bind=\"value: selectedTime\">-->\n<!--        <div class=\"timeDropdown\" data-bind=\"foreach: timeOptions\" style=\"display: none;\">-->\n<!--            <div data-bind=\"text: $data, click: $component.selectTime\"></div>-->\n<!--        </div>-->\n<!--    </div>-->\n<div class=\"dropdownContainer d-flex flex-column align-items-center align-self-stretch\" data-bind=\"withAfterRender: { afterRender: $component.afterRender}\">\n    <label class=\"input-icon w-100\" aria-labelledby=\"input-text-icon\">\n        <span class=\"far fa-clock icon\" aria-hidden=\"true\"></span>\n        <input type=\"text\" \n               class=\"form-control bookingStartTime mr-2 timeInput\" \n               placeholder=\"\" \n               data-bind=\"value: selectedTime, attr: { placeholder: placeholderText }\">\n        </input>\n    </label>\n    <div class=\"timeDropdown\" style=\"display: none;\" data-bind=\"foreach: timeOptions\">\n        <div data-bind=\"text: $data, click: $component.selectTime, css: { 'active': $data === $component.selectedTime() }\"></div>\n    </div>\n</div>\n\n    `\n});\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/time-picker.js?");

/***/ }),

/***/ "./src/components/time-slot-pill.js":
/*!******************************************!*\
  !*** ./src/components/time-slot-pill.js ***!
  \******************************************/
/***/ (() => {

eval("ko.components.register('time-slot-pill', {\n  viewModel: function (params) {\n    const self = this;\n    self.schedule = params.schedule;\n    self.selectedResources = params.selectedResources;\n    self.date = params.date;\n    self.options = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    self.startTime = ko.computed(() => luxon.DateTime.fromFormat(self.date.from_, \"dd/MM/yyyy HH:mm\").toJSDate());\n    self.endTime = ko.computed(() => luxon.DateTime.fromFormat(self.date.to_, \"dd/MM/yyyy HH:mm\").toJSDate());\n    self.toDateStr = d => `${d.getDate()}. ${monthNamesShort[d.getMonth()].toLowerCase()}`;\n    self.toTimeStr = (start, end) => {\n      if (end) {\n        return `${start.toLocaleTimeString('no', self.options).replace(':', '.')} -\n                ${end.toLocaleTimeString('no', self.options).replace(':', '.')}`;\n      }\n      return start.toLocaleTimeString('no', self.options).replace(':', '.');\n    };\n\n    // Assuming `removeDate` is a function passed in via params\n    self.removeDate = params.removeDate;\n    self.error = ko.computed(() => {\n      if (!self.schedule || !self.selectedResources) {\n        return false;\n      }\n\n      // Convert current time slot to the expected format for comparison\n      const currentEvent = {\n        date: luxon.DateTime.fromJSDate(self.startTime()).toFormat(\"yyyy-MM-dd\"),\n        from: luxon.DateTime.fromJSDate(self.startTime()).toFormat(\"HH:mm:ss\"),\n        to: luxon.DateTime.fromJSDate(self.endTime()).toFormat(\"HH:mm:ss\"),\n        resources: self.selectedResources()\n      };\n      const overlap = self.schedule().find(event => doesEventsOverlap(currentEvent, event));\n      if (overlap) {\n        const resource = currentEvent.resources.find(res => overlap.resources.some(a => a.id === res.id));\n        return `${resource.name} ikke tilgjengelig`;\n      }\n\n      // Utility function to check overlap (adapted from provided logic)\n      function doesEventsOverlap(event1, event2) {\n        if (event1.date !== event2.date) {\n          return false; // Different days, no overlap\n        }\n        if (event2.type === 'allocation' || event2.type === 'booking') {\n          return false;\n        }\n        const isTimeOverlapping = event1.from < event2.to && event1.to > event2.from;\n        const isResourceOverlapping = event1.resources.some(resource1 => event2.resources.some(resource2 => resource1.id === resource2.id));\n        return isTimeOverlapping && isResourceOverlapping;\n      }\n    });\n  },\n  // language=HTML\n  template: `\n\n        <div class=\"pill pill--secondary\" data-bind=\"css: {'pill--error': error}\">\n            <!-- ko if: startTime().getMonth() === endTime().getMonth() && startTime().getFullYear() === endTime().getFullYear() && startTime().getDate() === endTime().getDate() -->\n            <div class=\"pill-label\">\n                <span className=\"text-primary text-bold\" data-bind=\"text: toDateStr(startTime())\"></span>\n            </div>\n            <div class=\"pill-divider\"></div>\n            <div class=\"pill-time\"\n                 data-bind=\"text: toTimeStr(startTime(), endTime()), css: {'last-child': !removeDate}\">\n\n            </div>\n            <!-- /ko -->\n            <!-- ko ifnot: (startTime().getMonth() === endTime().getMonth() && startTime().getFullYear() === endTime().getFullYear() && startTime().getDate() === endTime().getDate()) -->\n            <div class=\"pill-content gap-1\">\n                <div class=\"date\"><span class=\"text-primary text-bold\" data-bind=\"text: toDateStr(startTime())\"></span>\n                    <span data-bind=\"text: toTimeStr(startTime())\"></span>\n                </div>\n                <span> - </span>\n                <div class=\"time\"><span class=\"text-primary text-bold\" data-bind=\"text: toDateStr(endTime())\"></span>\n                    <span data-bind=\"text: toTimeStr(endTime())\"></span>\n                </div>\n            </div>\n\n            <!-- /ko -->\n\n            <!-- ko if: !!removeDate -->\n            <button class=\"pill-icon\" data-bind=\"click: removeDate\"><i class=\"pill-cross\"></i></button>\n            <!-- /ko -->\n\n        </div>\n        <!-- ko if: error -->\n        <div class=\"d-flex align-items-center gap-2\">\n            <svg class=\"font-size-small\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6.00011 0.75C6.33292 0.75 6.63996 0.925781 6.80871 1.21406L11.8712 9.83906C12.0423 10.1297 12.0423 10.4883 11.8759 10.7789C11.7095 11.0695 11.3978 11.25 11.0626 11.25H0.937611C0.602455 11.25 0.290736 11.0695 0.12433 10.7789C-0.042076 10.4883 -0.0397323 10.1273 0.129018 9.83906L5.19152 1.21406C5.36027 0.925781 5.6673 0.75 6.00011 0.75ZM6.00011 3.75C5.68839 3.75 5.43761 4.00078 5.43761 4.3125V6.9375C5.43761 7.24922 5.68839 7.5 6.00011 7.5C6.31183 7.5 6.56261 7.24922 6.56261 6.9375V4.3125C6.56261 4.00078 6.31183 3.75 6.00011 3.75ZM6.75011 9C6.75011 8.80109 6.67109 8.61032 6.53044 8.46967C6.38979 8.32902 6.19902 8.25 6.00011 8.25C5.8012 8.25 5.61043 8.32902 5.46978 8.46967C5.32913 8.61032 5.25011 8.80109 5.25011 9C5.25011 9.19891 5.32913 9.38968 5.46978 9.53033C5.61043 9.67098 5.8012 9.75 6.00011 9.75C6.19902 9.75 6.38979 9.67098 6.53044 9.53033C6.67109 9.38968 6.75011 9.19891 6.75011 9Z\"\n                      fill=\"#B00020\"/>\n            </svg>\n            <span class=\"text-small text-red-error\" data-bind=\"text: error\"></span>\n        </div>\n        <!-- /ko -->\n    `\n});\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/time-slot-pill.js?");

/***/ }),

/***/ "./src/helpers/formatting.js":
/*!***********************************!*\
  !*** ./src/helpers/formatting.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateUrlParams: () => (/* binding */ CreateUrlParams)\n/* harmony export */ });\nvar dateformat_javascript = dateformat_backend.replace(/d/gi, \"dd\").replace(/m/gi, \"mm\").replace(/y/gi, \"yyyy\");\nfunction CreateUrlParams(params) {\n  var allParams = params.split(\"&\");\n  let urlParams = [];\n  for (var i = 0; i < allParams.length; i++) {\n    var splitParam = allParams[i].split(\"=\");\n    urlParams[splitParam[0]] = splitParam[1];\n  }\n  return urlParams;\n}\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/formatting.js?");

/***/ }),

/***/ "./src/helpers/hash.js":
/*!*****************************!*\
  !*** ./src/helpers/hash.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GenerateRandomHash: () => (/* binding */ GenerateRandomHash)\n/* harmony export */ });\nfunction GenerateRandomHash(length = 8) {\n  return Array.from({\n    length\n  }, () => Math.floor(Math.random() * 36).toString(36)).join('');\n}\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/hash.js?");

/***/ }),

/***/ "./src/helpers/translation.js":
/*!************************************!*\
  !*** ./src/helpers/translation.js ***!
  \************************************/
/***/ (() => {

eval("/**\n *\n */\n\nif (!globalThis['trans']) {\n  // Initialize translations as a Knockout observable object\n  globalThis['translations'] = ko.observable({});\n  const getJsonURL = phpGWLink('bookingfrontend/lang.php', null, true);\n  fetch(getJsonURL).then(a => a.json()).then(a => globalThis['translations'](a));\n\n  // Define the translate function\n  globalThis['trans'] = (group, tag, ...args) => {\n    // Retrieve the current value of the translations observable\n    const translations = globalThis['translations']();\n\n    // Function to process translation for a single group\n    const processTranslation = singleGroup => {\n      // Check if the group exists in the translations\n      if (translations[singleGroup] && translations[singleGroup][tag]) {\n        // Retrieve the template string for the specified group and tag\n        let template = translations[singleGroup][tag];\n\n        // Replace each placeholder with the corresponding argument\n        return template.replace(/%\\d+/g, placeholder => {\n          // Extract the number from the placeholder, convert it to index (0-based)\n          const index = parseInt(placeholder.substring(1)) - 1;\n          // Replace placeholder with the argument, if exists, otherwise keep the placeholder\n          return args[index] !== undefined ? args[index] : placeholder;\n        });\n      }\n      return null; // Indicate no translation found for this group\n    };\n\n    // Check if group is an array and try to find a translation in one of the groups\n    if (Array.isArray(group)) {\n      for (let i = 0; i < group.length; i++) {\n        const translation = processTranslation(group[i]);\n        // if(translation) {\n        //     console.log(\"found translation\", group[i], tag, translation)\n        // }\n        if (translation !== null) return translation;\n      }\n    } else {\n      // If group is not an array, process it directly\n      const translation = processTranslation(group);\n      // if(translation) {\n      //     console.log(\"found translation\", group, tag, translation)\n      // }\n      if (translation !== null) return translation;\n    }\n\n    // If no translation was found in the specified groups, and 'common' wasn't already tried, try 'common'\n    if (!Array.isArray(group) || !group.includes('common')) {\n      const commonTranslation = processTranslation('common');\n      // if(commonTranslation) {\n      //     console.log(\"found translation\", 'common', tag, translation)\n      // }\n      if (commonTranslation !== null) return commonTranslation;\n    }\n\n    // If no translation was found even in 'common', return a fallback string\n    return `Missing translation for [${Array.isArray(group) ? group.join(', ') : group}][${tag}]`;\n  };\n  class TransViewModel {\n    constructor(params, componentInfo) {\n      let translationTagParts = componentInfo.templateNodes.map(a => a.textContent);\n      if (translationTagParts.length === 1) {\n        if (translationTagParts[0].includes(':')) {\n          translationTagParts = translationTagParts[0].split(':');\n        }\n      }\n      translationTagParts = translationTagParts.map(text => text.trim());\n\n      // Adjust to handle the case where translationTagParts might not have both parts due to splitting by ':'\n      if (translationTagParts.length >= 2) {\n        this.tag = ko.observable(translationTagParts[1]);\n        this.group = ko.observable(translationTagParts[0]);\n      } else {\n        this.tag = typeof params.tag === 'function' ? params.tag : ko.observable(params.tag);\n        this.group = typeof params.group === 'function' ? params.group : ko.observable(params.group);\n      }\n\n      // Accepting suffix parameter\n      this.suffix = ko.observable(params.suffix || ''); // Default to empty if not provided\n\n      this.args = ko.observable(params.args);\n      this.translations = globalThis['translations'];\n      this.translated = ko.computed(() => {\n        if (self.translations && self.translations() && Object.keys(self.translations()).length > 0 && this.group && this.tag) {\n          let translation = globalThis['trans'](this.group(), this.tag(), this.args());\n          // Apply suffix if it exists\n          return translation + this.suffix();\n        }\n      });\n    }\n  }\n  ko.components.register('trans', {\n    viewModel: {\n      createViewModel: function (params, componentInfo) {\n        return new TransViewModel(params, componentInfo); // Create a new instance of the view model class for each component instance\n      }\n    },\n    // language=HTML\n    template: `<!--ko text: translated()--><!--/ko-->`\n  });\n\n  // console.log(\"LOADED TRANSLATIONS\", trans('tag', 'test'))\n}\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/translation.js?");

/***/ }),

/***/ "./src/helpers/util.js":
/*!*****************************!*\
  !*** ./src/helpers/util.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onDocumentReady: () => (/* binding */ onDocumentReady),\n/* harmony export */   phpGWLink: () => (/* binding */ phpGWLink)\n/* harmony export */ });\n/* harmony import */ var _translation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./translation */ \"./src/helpers/translation.js\");\n/* harmony import */ var _translation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_translation__WEBPACK_IMPORTED_MODULE_0__);\n/* global monthList, months */\n\nfunction getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\nvar Util = function () {\n  //Formattering\n  var format = function () {\n    var formatDateForBackend = function (date) {\n      if (date === \"\") {\n        return \"\";\n      }\n      var fDate = new Date(date);\n      return fDate.getFullYear() + \"-\" + (fDate.getMonth() + 1) + \"-\" + fDate.getDate() + \" \" + fDate.getHours() + \":\" + fDate.getMinutes() + \":\" + fDate.getSeconds() + \"\";\n    };\n    var getDateFormat = function (from, to) {\n      let ret = [];\n      let fromDate = new Date(from.replace(\" \", \"T\"));\n      let toDate = new Date(to.replace(\" \", \"T\"));\n      //\t\t\tlet fromDate = new Date(from);\n      //\t\t\tlet toDate = new Date(to);\n\n      if (fromDate.getDate() === toDate.getDate()) {\n        ret.push(fromDate.getDate() + \". \");\n        let month = monthList[fromDate.getMonth()];\n        ret.push(months[month]);\n        return ret;\n      } else {\n        ret.push(fromDate.getDate() + \".-\" + toDate.getDate() + \".\");\n        let month = monthList[fromDate.getMonth()];\n        ret.push(months[month]);\n        return ret;\n      }\n    };\n    var getTimeFormat = function (from, to) {\n      let fromDate = new Date(from.replace(\" \", \"T\"));\n      let toDate = new Date(to.replace(\" \", \"T\"));\n      //\t\t\tlet fromDate = new Date(from);\n      //\t\t\tlet toDate = new Date(to);\n      let ret;\n      ret = (fromDate.getHours() < 10 ? '0' + fromDate.getHours() : fromDate.getHours()) + \":\" + (fromDate.getMinutes() < 10 ? '0' + fromDate.getMinutes() : fromDate.getMinutes()) + \" - \" + (toDate.getHours() < 10 ? '0' + toDate.getHours() : toDate.getHours()) + \":\" + (toDate.getMinutes() < 10 ? '0' + toDate.getMinutes() : toDate.getMinutes());\n      return ret;\n    };\n    return {\n      FormatDateForBackend: formatDateForBackend,\n      GetDateFormat: getDateFormat,\n      GetTimeFormat: getTimeFormat\n    };\n  }();\n  return {\n    Format: format\n  };\n}();\n\n/**\n * Emulate phpGW's link function\n *\n * @param String strURL target URL\n * @param Object oArgs Query String args as associate array object\n * @param bool bAsJSON ask that the request be returned as JSON (experimental feature)\n * @param String baseURL (optional) Base URL to use instead of strBaseURL\n * @returns String URL\n */\nfunction phpGWLink(strURL, oArgs, bAsJSON, baseURL) {\n  // console.log(strBaseURL)\n  if (baseURL) {\n    const baseURLParts = baseURL.split('/').filter(a => a !== '' && !a.includes('http'));\n    baseURL = '//' + baseURLParts.slice(0, baseURLParts.length - 1).join('/') + '/'; // Remove last element (file name)\n  }\n  const urlParts = (baseURL || strBaseURL).split('?');\n  let newURL = urlParts[0] + strURL + '?';\n  if (oArgs == null) {\n    oArgs = new Object();\n  }\n  for (const key in oArgs) {\n    newURL += key + '=' + oArgs[key] + '&';\n  }\n  if (urlParts[1]) {\n    newURL += urlParts[1];\n  }\n  if (bAsJSON) {\n    newURL += '&phpgw_return_as=json';\n  }\n  return newURL;\n}\n$(document).ready(function () {\n  $(\"input[type=radio][name=select_template]\").change(function () {\n    var template = $(this).val();\n    var oArgs = {\n      menuaction: 'bookingfrontend.preferences.set'\n    };\n    var requestUrl = phpGWLink('bookingfrontend/', oArgs, true);\n    $.ajax({\n      type: 'POST',\n      dataType: 'json',\n      data: {\n        template_set: template\n      },\n      url: requestUrl,\n      success: function (data) {\n        //\t\tconsole.log(data);\n        location.reload(true);\n      }\n    });\n  });\n  $(\"input[type=radio][name=select_language]\").change(function () {\n    var lang = $(this).val();\n    var oArgs = {\n      menuaction: 'bookingfrontend.preferences.set'\n    };\n    var requestUrl = phpGWLink('bookingfrontend/', oArgs, true);\n    $.ajax({\n      type: 'POST',\n      dataType: 'json',\n      data: {\n        lang: lang\n      },\n      url: requestUrl,\n      success: function (data) {\n        location.reload(true);\n      }\n    });\n  });\n});\nfunction onDocumentReady(fn) {\n  // see if DOM is already available\n  if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n    // call on next available tick\n    setTimeout(fn, 1);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  }\n}\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/util.js?");

/***/ }),

/***/ "./src/helpers/withAfterRender.js":
/*!****************************************!*\
  !*** ./src/helpers/withAfterRender.js ***!
  \****************************************/
/***/ (() => {

eval("ko.bindingHandlers.withAfterRender = {\n  init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n    var value = valueAccessor();\n    ko.applyBindingsToNode(element, {\n      visible: true\n    }, bindingContext);\n    if (value.afterRender) {\n      value.afterRender(element);\n    }\n  }\n};\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/withAfterRender.js?");

/***/ }),

/***/ "./src/pages/application_new.js":
/*!**************************************!*\
  !*** ./src/pages/application_new.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_time_picker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/time-picker */ \"./src/components/time-picker.js\");\n/* harmony import */ var _components_time_slot_pill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/time-slot-pill */ \"./src/components/time-slot-pill.js\");\n/* harmony import */ var _components_time_slot_pill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_time_slot_pill__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_map_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/map-modal */ \"./src/components/map-modal.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _helpers_formatting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/formatting */ \"./src/helpers/formatting.js\");\n/* harmony import */ var _components_application_cart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/application-cart */ \"./src/components/application-cart.js\");\n\n\n\n\n\n\n\n/* global direct_booking */\nvar application;\n$(\".navbar-search\").removeClass(\"d-none\");\nvar baseURL = document.location.origin + \"/\" + window.location.pathname.split('/')[1] + \"/bookingfrontend/\";\n$(\".maleInput\").attr('data-bind', \"textInput: inputCountMale, attr: {'name': malename }\");\n$(\".femaleInput\").attr('data-bind', \"textInput: inputCountFemale, attr: {'name': femalename }\");\nvar urlParams = (0,_helpers_formatting__WEBPACK_IMPORTED_MODULE_4__.CreateUrlParams)(window.location.search);\nvar globalFacilitiesList = ko.observable({});\nko.validation.locale('nb-NO');\nvar am;\nvar lastcheckedResources = [];\nfunction applicationModel() {\n  var self = this;\n  self.translationObservable = globalThis['translations'];\n  self.building_id = ko.observable();\n  self.showErrorMessages = ko.observable(false);\n  // if (document.getElementById(\"applications-cart-content\")) {\n  //\n  //     self.applicationCartItems = ko.computed(function () {\n  //         return bc.applicationCartItems();\n  //     });\n  // }\n  self.formStep = ko.observable(0);\n  self.bookingDate = ko.observable('');\n  self.bookingStartTime = ko.observable('');\n  self.bookingEndTime = ko.observable('');\n  self.goNext = () => {\n    // If user forgets to click add button, handle it automagically\n    if (self.bookingDate() && self.bookingStartTime() && self.bookingEndTime()) {\n      self.addDate();\n    }\n    self.formStep(self.formStep() + 1);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  self.goPrev = () => {\n    self.formStep(self.formStep() - 1);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  self.formatDate = function (date) {\n    const from = luxon.DateTime.fromFormat(date.from_, \"dd/MM/yyyy HH:mm\");\n    var day = from.day;\n    var months = ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'];\n    var month = months[from.month - 1];\n    return day + '. ' + month;\n  };\n  self.formatTimePeriod = function (date) {\n    var fromTime = date.from_.split(' ')[1];\n    var toTime = date.to_.split(' ')[1];\n    return fromTime + '-' + toTime;\n  };\n  self.bookableResource = ko.observableArray();\n  self.selectedResourcesOld = ko.observableArray(0);\n  self.isResourceSelected = ko.computed(function () {\n    var checkedResources = [];\n    var k = 0;\n    for (var i = 0; i < self.bookableResource().length; i++) {\n      if (self.bookableResource()[i].selected()) {\n        checkedResources.push(self.bookableResource()[i].id);\n        if (self.selectedResourcesOld.indexOf(self.bookableResource()[i].id) < 0) {\n          self.selectedResourcesOld.push(self.bookableResource()[i].id);\n        }\n        k++;\n      } else {\n        if (self.selectedResourcesOld.indexOf(self.bookableResource()[i].id) > -1) {\n          self.selectedResourcesOld.splice(self.selectedResourcesOld.indexOf(self.bookableResource()[i].id), 1);\n        }\n      }\n    }\n    if (k > 0) {\n      var array1 = checkedResources;\n      var array2 = lastcheckedResources;\n      var is_same = array1.length == array2.length && array1.every(function (element, index) {\n        return element === array2[index];\n      });\n      if (is_same) {\n        return true;\n      }\n      lastcheckedResources = checkedResources;\n      //\t\t\tconsole.log(checkedResources);\n      $(\"#regulation_documents\").empty();\n      getDoc(checkedResources);\n      /**\n       * Defined in the file purchase_order_add.js\n       */\n\n      if (typeof populateTableChkArticles === 'function') {\n        populateTableChkArticles([], checkedResources, '', '', '');\n        return true;\n      }\n      return true;\n    }\n    return false;\n  }).extend({\n    required: true\n  });\n  self.audiences = ko.observableArray();\n  self.audienceSelectedValue = ko.observable();\n  self.activityId = ko.observable();\n  self.date = ko.observableArray();\n  self.addDate = function () {\n    if (self.bookingDate() && self.bookingStartTime() && self.bookingEndTime()) {\n      let dateStr = self.bookingDate();\n      let dateParts = dateStr.split(\".\");\n      if (dateParts[0].length === 1) {\n        dateParts[0] = \"0\" + dateParts[0];\n        dateStr = dateParts.join(\".\");\n      }\n      if (dateParts[1].length === 1) {\n        dateParts[1] = \"0\" + dateParts[1];\n        dateStr = dateParts.join(\".\");\n      }\n      let date = luxon.DateTime.fromFormat(dateStr, \"dd.MM.yyyy\");\n      var startTimeParts = self.bookingStartTime().split(\":\");\n      var endTimeParts = self.bookingEndTime().split(\":\");\n      var start = date.set({\n        hour: parseInt(startTimeParts[0]),\n        minute: parseInt(startTimeParts[1])\n      });\n      var end = date.set({\n        hour: parseInt(endTimeParts[0]),\n        minute: parseInt(endTimeParts[1])\n      });\n      var now = luxon.DateTime.local();\n      if (start < now || end < now) {\n        $(\".applicationSelectedDates\").html(\"Tidspunktet må være i fremtiden\");\n      } else if (start >= end) {\n        $(\".applicationSelectedDates\").html(\"Starttid må være tidligere enn sluttid\");\n      } else {\n        var match = ko.utils.arrayFirst(self.date(), function (item) {\n          return item.id === [start.toISO(), end.toISO()].join(\"\");\n        });\n        if (!match) {\n          self.date.push({\n            id: [start.toISO(), end.toISO()].join(\"\"),\n            from_: start.toFormat('dd/MM/yyyy HH:mm'),\n            to_: end.toFormat('dd/MM/yyyy HH:mm'),\n            formatedPeriode: start.toFormat('dd/MM/yyyy HH:mm') + ' - ' + end.toFormat('HH:mm')\n          });\n          setTimeout(function () {\n            self.bookingDate(\"\");\n            self.bookingStartTime(\"\");\n            self.bookingEndTime(\"\");\n            $(\".applicationSelectedDates\").html(\"\");\n            if (typeof post_handle_order_table === 'function') {\n              post_handle_order_table();\n            }\n          }, 500);\n        }\n      }\n    }\n  };\n  self.removeDate = function (data) {\n    self.date.remove(data);\n    if (typeof post_handle_order_table === 'function') {\n      setTimeout(function () {\n        post_handle_order_table();\n      }, 500);\n    }\n  };\n  self.removeRessource = function () {\n    this.selected(false);\n  };\n  self.aboutArrangement = ko.observable(\"\");\n  self.agegroupList = ko.observableArray();\n  self.specialRequirements = ko.observable(\"\");\n  self.attachment = ko.observable();\n  self.schedule = ko.observableArray();\n  self.loadBuildingData = async () => {\n    try {\n      if (!self.building_id() || !self.date() || self.date().length === 0) {\n        return;\n      }\n      // const currDate = DateTime.fromJSDate(new Date());\n      // const maxEndDate = currDate.plus({months: this.BOOKING_MONTH_HORIZON}).endOf('month');\n\n      // Construct URLs for fetching data\n      // Construct the URL for fetching building schedule information\n      let urlBuildingSchedule = phpGWLink('bookingfrontend/', {\n        menuaction: 'bookingfrontend.uibooking.building_schedule_pe',\n        building_id: self.building_id(),\n        dates_csv: self.date().map(a => a.from_.split(\" \")[0].replaceAll('/', '-'))\n      }, true);\n      // console.log(urlBuildingSchedule);\n\n      const [buildingData] = await Promise.all([fetch(urlBuildingSchedule).then(async res => (await res.json())?.ResultSet?.Result?.results)]);\n      // this.resources(buildingData.resources);\n      // this.seasons(buildingData.seasons);\n      self.schedule(buildingData?.schedule || []);\n      // console.log(buildingData.schedule);\n      // this.calculateStartEndHours();\n    } catch (error) {\n      console.error('Error loading building data:', error);\n    }\n  };\n  self.building_id.subscribe(newBuildingId => {\n    self.loadBuildingData();\n  });\n  self.date.subscribe(date => {\n    self.loadBuildingData();\n  });\n  self.selectedResources = ko.computed(() => {\n    return ko.utils.arrayFilter(self.bookableResource(), function (resource) {\n      return resource.selected();\n    });\n  });\n  self.selectedResourcesWithFacilities = ko.computed(function () {\n    var selectedResources = ko.utils.arrayFilter(self.bookableResource(), function (resource) {\n      return resource.selected();\n    });\n    var result = [];\n    for (var i = 0; i < selectedResources.length; i++) {\n      var facilities = globalFacilitiesList()[selectedResources[i].id.toString()] || [];\n      result.push({\n        resourceName: selectedResources[i].name,\n        // Only pushing the name\n        facilities: facilities\n      });\n    }\n    return result;\n  });\n  self.selectedResourcesOld.subscribe(function (currentSelectedResources) {\n    // Iterate over all bookable resources\n    self.bookableResource().forEach(function (resource) {\n      var isSelected = currentSelectedResources.includes(resource.id);\n      // Update aria-selected attribute\n      var element = $(`#select2-select-multiple-results [id*='${resource.id}']`);\n      $(this).attr('aria-selected', 'false');\n      $(this).attr('aria-fake-selected', isSelected ? 'true' : 'false');\n    });\n  });\n  $(document).ready(function () {\n    /* Multiselect dropdown */\n    var $select = $('#select-multiple'); // Replace with your select element's ID\n    var $displayContainer = $('.selected-items-display'); // The container where you want to display the selected items\n    // console.log($displayContainer);\n    $select.select2({\n      theme: 'select-v2',\n      width: '100%',\n      closeOnSelect: false\n    });\n    const updateSelected = () => {\n      $(\".select2-results__option[id^='select2-select-multiple-result-']\").each(function () {\n        var splitElementid = this.id.split(\"-\"); // Get the item's ID\n        const itemId = splitElementid[splitElementid.length - 1];\n        console.log('updateSelected', itemId);\n        var isSelected = self.selectedResourcesOld().includes(+itemId) /* your logic to determine if the item should be selected */;\n\n        // Set aria-selected attribute based on your condition\n        $(this).attr('aria-selected', 'false');\n        $(this).attr('aria-fake-selected', isSelected ? 'true' : 'false');\n      });\n    };\n    $select.on('select2:open', function () {\n      // Use setTimeout to ensure the operations happen after the Select2 dropdown is fully rendered\n      setTimeout(function () {\n        updateSelected();\n      }, 0);\n    });\n    function handleSelectUnselect(e) {\n      var data = e.params.data;\n      console.log(\"Item selected/unselected: \", +data.id);\n      var resource = self.bookableResource().find(function (r) {\n        return r.id === +data.id;\n      });\n      console.log(self.bookableResource());\n      console.log(resource);\n      if (resource) {\n        resource.selected(!resource.selected()); // Toggle the selected state\n      }\n      console.log($(this));\n\n      // Reset the value and trigger change to refresh the Select2 display\n      $(this).val(null).trigger('change');\n      setTimeout(function () {\n        updateSelected();\n      }, 0);\n    }\n    $select.on('select2:select', handleSelectUnselect);\n    $select.on('select2:unselect', handleSelectUnselect);\n  });\n}\n$(document).ready(function () {\n  var activityId;\n  if (typeof urlParams['building_id'] === 'undefined') {\n    urlParams['building_id'] = building_id;\n  }\n  am = new applicationModel();\n  am.building_id(urlParams['building_id']);\n  let getJsonURL = phpGWLink('bookingfrontend/', {\n    menuaction: \"bookingfrontend.uiapplication.add\",\n    building_id: urlParams['building_id'],\n    phpgw_return_as: \"json\"\n  }, true);\n  $.getJSON(getJsonURL, function (result) {\n    activityId = result.application.activity_id;\n    for (var i = 0; i < result.agegroups.length; i++) {\n      am.agegroupList.push({\n        name: result.agegroups[i].name,\n        agegroupLabel: result.agegroups[i].name,\n        inputCountMale: ko.observable(\"\").extend({\n          number: true\n        }),\n        inputCountFemale: ko.observable(\"\").extend({\n          number: true\n        }),\n        malename: 'male[' + result.agegroups[i].id + ']',\n        femalename: 'female[' + result.agegroups[i].id + ']',\n        id: result.agegroups[i].id\n      });\n    }\n    if (initialAgegroups != null) {\n      for (var i = 0; i < initialAgegroups.length; i++) {\n        var id = initialAgegroups[i].agegroup_id;\n        var find = ko.utils.arrayFirst(am.agegroupList(), function (current) {\n          return current.id == id;\n        });\n        if (find) {\n          find.inputCountMale(initialAgegroups[i].male);\n          find.inputCountFemale(initialAgegroups[i].female);\n        }\n      }\n    }\n    for (var i = 0; i < result.audience.length; i++) {\n      if ($.inArray(result.audience[i].id, initialAudience) > -1) {\n        $(\"#audienceDropdownBtn\").text(result.audience[i].name);\n      }\n      am.audiences.push({\n        id: result.audience[i].id,\n        name: result.audience[i].name\n      });\n    }\n    getJsonURL = phpGWLink('bookingfrontend/', {\n      menuaction: \"bookingfrontend.uiresource.index_json\",\n      filter_building_id: urlParams['building_id'],\n      sort: \"name\",\n      phpgw_return_as: \"json\"\n    }, true);\n    $.getJSON(getJsonURL, function (result) {\n      for (var i = 0; i < result.results.length; i++) {\n        var currentResource = result.results[i];\n        if (currentResource.deactivate_application !== 1 && currentResource.building_id == urlParams['building_id']) {\n          var tempSelected = false;\n          if ($.inArray(currentResource.id, initialSelection) > -1) {\n            tempSelected = true;\n          }\n          if (typeof urlParams['resource_id'] !== \"undefined\" && initialSelection.length == 0) {\n            if (urlParams['resource_id'] == currentResource.id) {\n              tempSelected = true;\n            }\n          }\n          var resource_name = currentResource.name;\n          var now = Math.floor(Date.now() / 1000);\n          if (currentResource.simple_booking && currentResource.simple_booking_start_date < now || currentResource.hidden_in_frontend == 1) {\n            //skip this one\n            resource_name += ' *';\n          } else {\n            if (currentResource.direct_booking && currentResource.direct_booking < now) {\n              resource_name += ' *';\n            }\n            am.bookableResource.push({\n              id: currentResource.id,\n              name: resource_name,\n              selected: ko.observable(tempSelected)\n            });\n          }\n        }\n\n        // Save facilities for the current resource to the globalFacilitiesList observable\n        if (currentResource.facilities_list && Array.isArray(currentResource.facilities_list)) {\n          var resourceId = currentResource.id.toString();\n          if (!globalFacilitiesList()[resourceId]) {\n            globalFacilitiesList()[resourceId] = [];\n          }\n          for (var j = 0; j < currentResource.facilities_list.length; j++) {\n            globalFacilitiesList()[resourceId].push(currentResource.facilities_list[j]);\n          }\n        }\n      }\n      globalFacilitiesList.valueHasMutated();\n    });\n    var parameter = {\n      menuaction: \"bookingfrontend.uidocument_view.regulations\",\n      'owner[]': \"building::\" + urlParams['building_id'],\n      sort: \"name\"\n    };\n    getJsonURL = phpGWLink('bookingfrontend/', parameter, true);\n    for (var i = 0; i < initialSelection.length; i++) {\n      getJsonURL += '&owner[]=resource::' + initialSelection[i];\n    }\n    $.getJSON(getJsonURL, function (result) {\n      setDoc(result.data);\n    });\n  }).done(function () {\n    am.activityId(activityId);\n    console.log(\"Applying bindings\");\n    ko.applyBindings(am, document.getElementById(\"new-application-page\"));\n    PopulatePostedDate();\n    populateApplicationDate();\n    if (typeof initialAudience !== \"undefined\") {\n      am.audienceSelectedValue(initialAudience);\n    }\n  });\n  $('.resourceDropdown').on('click', function () {\n    $(this).parent().toggleClass('show');\n  });\n  $(\"#application_form\").submit(function (event) {\n    var allowSubmit = validate_documents();\n    if (!allowSubmit) {\n      alert(errorAcceptedDocs);\n      event.preventDefault();\n    }\n  });\n});\nfunction validate_documents() {\n  var n = 0;\n  $('#regulation_documents input[name=\"accepted_documents[]\"]').each(function () {\n    if (!$(this).is(':checked')) {\n      n++;\n    }\n  });\n  var v = n == 0 ? true : false;\n  return v;\n}\nfunction getDoc(checkedResources) {\n  var parameter = {\n    menuaction: \"bookingfrontend.uidocument_view.regulations\",\n    'owner[]': \"building::\" + urlParams['building_id'],\n    sort: \"name\"\n  };\n  var getJsonURL = phpGWLink('bookingfrontend/', parameter, true);\n  for (var i = 0; i < checkedResources.length; i++) {\n    getJsonURL += '&owner[]=resource::' + checkedResources[i];\n  }\n  $.getJSON(getJsonURL, function (result) {\n    setDoc(result.data);\n  });\n}\nfunction setDoc(data) {\n  var child = '';\n  var checked;\n  var value;\n  for (var i = 0; i < data.length; i++) {\n    checked = '';\n    if (initialAcceptedDocs != null) {\n      if (initialAcceptedDocs[i] == data[i].id) {\n        checked = ' checked= \"checked\"';\n      }\n    }\n    value = data[i].id;\n\n    // OLD Checkbox\n    // child += \"<div>\";\n    // child += '<label class=\"check-box-label d-inline\"><input name=\"accepted_documents[]\" value=\"' + value + '\" class=\"form-check-input\" type=\"checkbox\"' + checked + '><span class=\"label-text\">';\n    // child += '</span></label>';\n    // child += '<a class=\"d-inline termAcceptDocsUrl\" target=\"_blank\"  href=\"' + RemoveCharacterFromURL(data[i].link, 'amp;') + '\">' + data[i].name + '</a>';\n    // child += '<i class=\"fas fa-external-link-alt\"></i>';\n    // child += \"</div>\";\n\n    child += '<div class=\"col-12 mb-4\">';\n    child += '<label class=\"choice\">';\n    child += '<input name=\"accepted_documents[]\" value=\"' + value + '\" type=\"checkbox\"' + checked + '>';\n    child += '<a class=\"d-inline termAcceptDocsUrl\" target=\"_blank\"  href=\"' + RemoveCharacterFromURL(data[i].link, 'amp;') + '\">' + data[i].name + '</a>';\n    child += '<span class=\"choice__check\">';\n    child += '</span>';\n    child += '</label>';\n    // child += '<i class=\"fas fa-external-link-alt\"></i>';\n    child += \"</div>\";\n\n    // <div className=\"col-12 mb-4\">\n    // \t<label className=\"choice\">\n    // \t\t<input type=\"checkbox\" name=\"multiHall\"/>\n    // \t\tLeiepriser\n    // \t\t<span className=\"choice__check\"></span>\n    // \t</label>\n    // </div>\n  }\n  $(\"#regulation_documents\").html(child);\n}\nfunction PopulatePostedDate() {\n  if (initialDates != null) {\n    for (var i = 0; i < initialDates.length; i++) {\n      var from_ = initialDates[i].from_.replace(\" \", \"T\");\n      var to_ = initialDates[i].to_.replace(\" \", \"T\");\n      am.date.push({\n        from_: formatDateToDateTimeString(new Date(from_)),\n        to_: formatDateToDateTimeString(new Date(to_)),\n        formatedPeriode: formatDate(new Date(from_), new Date(to_))\n      });\n    }\n  } else {\n    if (typeof urlParams['start'] !== \"undefined\" && typeof urlParams['end'] !== \"undefined\") {\n      if (urlParams['start'].length > 0 && urlParams['end'].length > 0) {\n        am.date.push({\n          from_: formatDateToDateTimeString(new Date(parseInt(urlParams['start']))),\n          to_: formatDateToDateTimeString(new Date(parseInt(urlParams['end']))),\n          /*repeat: false,*/\n          formatedPeriode: formatDate(new Date(parseInt(urlParams['start'])), new Date(parseInt(urlParams['end'])))\n        });\n      }\n    }\n  }\n}\nfunction populateApplicationDate() {\n  if (typeof urlParams['fromDate'] !== \"undefined\") {\n    let date = new Date(urlParams['fromDate']);\n    am.bookingDate(date);\n    let ye = new Intl.DateTimeFormat('en', {\n      year: 'numeric'\n    }).format(date);\n    let mo = new Intl.DateTimeFormat('en', {\n      month: '2-digit'\n    }).format(date);\n    let da = new Intl.DateTimeFormat('en', {\n      day: '2-digit'\n    }).format(date);\n    $(\".datepicker-btn\").val(`${da}/${mo}/${ye}`);\n  }\n}\nvar d = new Date();\n//\n\n// Grab attachment elements\nconst attFileInput = document.getElementById(\"field_name_input\");\nconst attInput = document.getElementById(\"field_name\");\nconst attRemove = document.getElementById(\"attachment-remove\");\nconst attContainer = document.getElementById(\"attachment\");\nconst attUpload = document.getElementById(\"attachment-upload\");\n\n// Show Alert Function\nfunction showAlert(message, className) {\n  // Create Div\n  const attError = document.createElement(\"div\");\n  // Alert\n  //  attError.className = `alert ${className}`;\n  attError.className = 'alert ' + className;\n  //Add Text\n  attError.appendChild(document.createTextNode(message));\n  // Insert Alert\n  attContainer.insertBefore(attError, attUpload);\n  // Disable \"Fjern Vedlegg\" button\n  attRemove.className = 'isDisabled';\n  attUpload.className = 'isDisabled';\n  // Timeout and remove error\n  setTimeout(function () {\n    document.querySelector(\".alert\").remove();\n    attRemove.classList.remove(\"isDisabled\");\n    attUpload.classList.remove(\"isDisabled\");\n  }, 2500);\n}\n\n// Shows remove attachment button when input has text:\nif (attInput) {\n  attInput.addEventListener(\"change\", function () {\n    if (attInput.value === '' && attInput.textContent === '') {\n      return;\n    } else {\n      attRemove.style.display = \"block\";\n    }\n  });\n  // Pushes filename to field_name_input and validates file size\n  document.getElementById('field_name').onchange = function () {\n    var error = false;\n    var filePath = this.value;\n    var accepted_filetypes = this.accept;\n    if (filePath) {\n      var fileName = filePath.split(/(\\\\|\\/)/g).pop();\n      $(\"#field_name_input\").empty().append(fileName);\n      var suffix = '.' + fileName.split('.').pop();\n      const regex = new RegExp(suffix);\n      if (!accepted_filetypes.match(regex)) {\n        error = true;\n        showAlert('Ugyldig filtype!', 'alert-danger');\n      }\n    }\n    // Checks if file size is greater than 2MB\n    if (attInput.files[0].size > 2000000) {\n      error = true;\n      showAlert('Filen er for stor!', 'alert-danger');\n    }\n    ;\n    if (error) {\n      attFileInput.textContent = '';\n      attInput.value = '';\n      attRemove.style.display = \"none\";\n    }\n  };\n  // Removes attachment when clicked\n  attRemove.addEventListener(\"click\", function () {\n    if (attFileInput.textContent === '' && attInput.value === '') {\n      return;\n    } else {\n      showAlert('Vedlegg fjernet!', \"alert-success\");\n      attFileInput.textContent = '';\n      attInput.value = '';\n      attRemove.style.display = \"none\";\n    }\n  });\n}\nwindow.onload = function () {\n  const error = document.getElementById(\"submit-error\");\n  const eventName = document.getElementById(\"inputEventName\");\n  const organizerName = document.getElementById(\"inputOrganizerName\");\n  const targetAudience = document.getElementById(\"inputTargetAudience\");\n  if (!eventName) {\n    console.error(\"inputEventName missing!\");\n    return;\n  }\n  if (!error) {\n    console.error(\"submit-error missing!\");\n    return;\n  }\n  if (!organizerName) {\n    console.error(\"inputOrganizerName missing!\");\n    return;\n  }\n  if (!targetAudience) {\n    console.error(\"inputTargetAudience missing!\");\n    return;\n  }\n  let inputElements = [eventName, organizerName];\n  for (let i = 0; i < inputElements.length; i++) {\n    inputElements[i].addEventListener(\"input\", function (e) {\n      if (!e.target.value) {\n        e.target.classList.add(\"is-invalid\") + e.target.classList.remove(\"is-valid\");\n      } else {\n        e.target.classList.remove(\"is-invalid\") + e.target.classList.add(\"is-valid\");\n      }\n    });\n  }\n  const validateTargetAudience = function () {\n    const targetAudienceSelect = document.getElementById(\"audienceDropdown\");\n\n    // If no value is selected, add 'is-invalid' class, else add 'is-valid' class\n    !targetAudienceSelect.value ? targetAudienceSelect.classList.add(\"is-invalid\") : targetAudienceSelect.classList.add(\"is-valid\");\n  };\n  const validateInputs = function () {\n    !eventName.value ? eventName.classList.add(\"is-invalid\") : eventName.classList.replace(\"is-invalid\", \"is-valid\") || eventName.classList.add(\"is-valid\");\n    !organizerName.value ? organizerName.classList.add(\"is-invalid\") : organizerName.classList.replace(\"is-invalid\", \"is-valid\") || organizerName.classList.add(\"is-valid\");\n  };\n  const submitDateIfNeeded = function () {\n    // Check if all date fields are filled\n    if (am.bookingDate() && am.bookingStartTime() && am.bookingEndTime()) {\n      // Check if this date was already submitted\n      var isAlreadySubmitted = am.date().some(function (submittedDate) {\n        return submittedDate.from_ === am.bookingDate() && submittedDate.to_ === am.bookingStartTime() && submittedDate.formatedPeriode === am.bookingEndTime();\n      });\n\n      // If not submitted, submit it\n      if (!isAlreadySubmitted) {\n        am.addDate();\n      }\n    }\n  };\n  form.addEventListener(\"submit\", function (e) {\n    submitDateIfNeeded();\n    if (!eventName.value || !organizerName.value || !targetAudience.value) {\n      e.preventDefault();\n      e.stopPropagation();\n      validateInputs();\n      validateTargetAudience();\n      error.style.display = \"block\";\n      setTimeout(function () {\n        error.style.display = \"none\";\n      }, 5000);\n    } else {\n      return;\n    }\n  });\n};\n\n//# sourceURL=webpack://bookingfrontend_2/./src/pages/application_new.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/pages/application_new.js");
/******/ 	
/******/ })()
;