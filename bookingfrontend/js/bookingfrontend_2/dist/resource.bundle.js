/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/application-cart.js":
/*!********************************************!*\
  !*** ./src/components/application-cart.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApplicationCart: () => (/* binding */ ApplicationCart)\n/* harmony export */ });\n/* harmony import */ var _helpers_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/util.js */ \"./src/helpers/util.js\");\n\nclass ApplicationsCartModel {\n  constructor() {\n    this.applicationCartItems = ko.observableArray([]);\n    this.applicationCartItemsEmpty = ko.observable(false);\n    this.visible = ko.observable(true);\n    this.cartElementExpanded = ko.observable(true);\n    this.initializeCart();\n  }\n  initializeCart() {\n    this.getApplicationsCartItems();\n  }\n  toggleCartExpansion() {\n    this.cartElementExpanded(!this.cartElementExpanded());\n  }\n  deleteItem(item) {\n    console.log(\"got delete request\");\n    const requestUrl = (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.phpGWLink)('bookingfrontend/', {\n      menuaction: \"bookingfrontend.uiapplication.delete_partial\"\n    }, true);\n    if (confirm('Do you want to delete this application?')) {\n      fetch(requestUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: item.id\n        })\n      }).then(response => response.json()).then(() => this.getApplicationsCartItems()).catch(error => console.error('Error:', error));\n    }\n  }\n  getApplicationsCartItems() {\n    const getJsonURL = (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.phpGWLink)('bookingfrontend/', {\n      menuaction: \"bookingfrontend.uiapplication.get_partials\"\n    }, true);\n    fetch(getJsonURL).then(response => response.json()).then(data => this.updateCartItems(data)).catch(error => console.error('Error fetching cart items:', error));\n  }\n  updateCartItems(data) {\n    const {\n      list,\n      total_sum\n    } = data;\n    if (total_sum) {\n      // document.getElementById(\"total_sum\").textContent = total_sum.toFixed(2);\n      // document.getElementById(\"total_sum_block\").style.display = 'block';\n    }\n    this.applicationCartItemsEmpty(list.length < 1);\n    this.applicationCartItems(list.map(item => {\n      return {\n        ...item,\n        dates: item.dates.map(dateObj => {\n          const currentStartDate = new Date(dateObj.from_.replace(\" \", \"T\"));\n          currentStartDate.setHours(dateObj.from_.substring(11, 13));\n          currentStartDate.setMinutes(dateObj.from_.substring(14, 16));\n          const currentEndDate = new Date(dateObj.to_.replace(\" \", \"T\"));\n          currentEndDate.setHours(dateObj.to_.substring(11, 13));\n          currentEndDate.setMinutes(dateObj.to_.substring(14, 16));\n          return {\n            date: formatSingleDateWithoutHours(currentStartDate),\n            from_: dateObj.from_,\n            to_: dateObj.to_,\n            periode: formatPeriodeHours(currentStartDate, currentEndDate)\n          };\n        }),\n        resources: ko.observableArray(item.resources.map(res => ({\n          ...res\n        }))),\n        joinedResources: item.resources.map(res => res.name).join(\", \")\n      };\n    }));\n  }\n}\nlet ApplicationCart = new ApplicationsCartModel();\n(0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.onDocumentReady)(() => {\n  const elem = document.getElementById('application-cart-container') || document.getElementById(\"applications-cart-content\");\n  if (elem) {\n    console.log(\"INITIALISING CART\");\n    ko.applyBindings(ApplicationCart, elem);\n  }\n});\n\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/application-cart.js?");

/***/ }),

/***/ "./src/components/collapsable-text.js":
/*!********************************************!*\
  !*** ./src/components/collapsable-text.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_withAfterRender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/withAfterRender */ \"./src/helpers/withAfterRender.js\");\n/* harmony import */ var _helpers_withAfterRender__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_helpers_withAfterRender__WEBPACK_IMPORTED_MODULE_0__);\n\nko.components.register('collapsable-text', {\n  viewModel: function (params) {\n    self.content = params.content;\n    self.descriptionExpanded = ko.observable(false);\n    self.contentSize = ko.observable(0);\n    self.containerSize = ko.observable(0);\n    self.contentElement = ko.observable(null);\n    self.toggleDescription = () => {\n      self.descriptionExpanded(!self.descriptionExpanded());\n    };\n    self.afterRenderContent = element => {\n      console.log(\"after element set\", element);\n      self.contentElement(element);\n    };\n    self.isActive = ko.computed(() => {\n      const elem = self.contentElement();\n      if (!elem) {\n        return true;\n      }\n      console.log(\"setting active\", elem.parentElement.scrollHeight, elem.parentElement.clientHeight);\n      return elem.parentElement.scrollHeight > elem.parentElement.clientHeight || elem.parentElement.scrollWidth > elem.parentElement.clientWidth;\n    });\n  },\n  // language=HTML\n  template: `\n        <div class=\"col-sm-12 d-flex flex-column collapsible-content collapsed-description\"\n             data-bind=\"css: {'collapsed-description-fade': !descriptionExpanded() && isActive, 'collapsed-description': !descriptionExpanded()}\">\n            <!-- ko if: content -->\n            <p data-bind=\"html: content,withAfterRender: { afterRender: afterRenderContent}\"></p>\n            <!-- /ko -->\n            <!-- ko ifnot: content -->\n            <p data-bind=\"template: { nodes: $componentTemplateNodes }, withAfterRender: { afterRender: afterRenderContent}\"></p>\n            <!-- /ko -->\n        </div>\n        <div class=\"col-sm-12 \" data-bind=\"visible: isActive\">\n            <button class=\"pe-btn  pe-btn--transparent text-secondary d-flex gap-3\"\n                    data-bind=\"click: toggleDescription\">\n                <!-- ko if: descriptionExpanded() -->\n                <span><trans params=\"group: 'bookingfrontend',tag: 'show_less'\"></span>\n                <!-- /ko -->\n                <!-- ko ifnot: descriptionExpanded() -->\n                <span><trans params=\"group: 'bookingfrontend',tag: 'show_more'\"></span>\n                <!-- /ko -->\n                <i class=\"fa\"\n                   data-bind=\"css: {'fa-chevron-up': descriptionExpanded(), 'fa-chevron-down': !descriptionExpanded()}\"></i>\n            </button>\n        </div>\n    `\n});\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/collapsable-text.js?");

/***/ }),

/***/ "./src/components/light-box.js":
/*!*************************************!*\
  !*** ./src/components/light-box.js ***!
  \*************************************/
/***/ (() => {

eval("allowedEmbedTypes = ['embed', 'youtube', 'vimeo', 'instagram', 'url'];\nallowedMediaTypes = [...allowedEmbedTypes, 'image', 'html'];\nko.components.register('light-box', {\n  viewModel: class LightboxViewModel {\n    /**\n     * A mapping of resource IDs to their corresponding building resource details.\n     * @type {KnockoutObservableArray<{src: string, alt: string}>}\n     */\n    images = null;\n    currentIndex = ko.observable(0);\n    constructor(params) {\n      this.images = params.images; // This is an observable array\n      this.hash = this.randomHash();\n      this.settings = Object.assign(Object.assign(Object.assign({}, bootstrap.Modal.Default), bootstrap.Carousel.Default), {\n        interval: false,\n        target: '[data-toggle=\"lightbox\"]',\n        gallery: '',\n        size: 'xl',\n        constrain: true\n      });\n      this.settings = Object.assign(Object.assign({}, this.settings), params.options);\n      this.modalOptions = (() => this.setOptionsFromSettings(bootstrap.Modal.Default))();\n      this.carouselOptions = (() => this.setOptionsFromSettings(bootstrap.Carousel.Default))();\n      this.hasImages = ko.computed(() => {\n        return this.images().length > 0;\n      });\n      this.additionalImageCount = ko.computed(() => {\n        var count = this.images().length - 4;\n        return count > 0 ? count : 0;\n      });\n      this.currentImage = ko.computed(() => {\n        return this.hasImages() ? this.images()[this.currentIndex()] : {};\n      });\n      this.carouselClasses = ko.computed(() => {\n        return `lightbox-carousel carousel slide ${this.settings.size === 'fullscreen' ? 'position-absolute w-100 translate-middle top-50 start-50' : ''}`;\n      });\n      this.processedImages = ko.pureComputed(() => {\n        return this.images().map((image, i) => {\n          // Define regex patterns for Youtube and Instagram URLs\n          const youtubeRegex = /.*youtu(.be\\/|v\\/|embed\\/|watch\\?v=)([^#&?]*).*/;\n          const instagramRegex = /.*instagram.com.*/;\n\n          // Get src from image\n          let src = image.src.replace(/\\/$/, '');\n          const regex = new RegExp(`^(${allowedMediaTypes.join('|')})`, 'i');\n          const isHtml = /^html/.test(src);\n          const isForcedImage = /^image/.test(src);\n\n          // Fetch Instagram and YouTube URLs\n          const youtubeMatch = src.match(youtubeRegex);\n          const instagramMatch = src.match(instagramRegex);\n          const youtubeLink = youtubeMatch && youtubeMatch[2].length === 11 ? `https://www.youtube.com/embed/${youtubeMatch[2]}` : null;\n          const instagramEmbed = instagramMatch ? src + '/embed' : null;\n          let inner;\n          if (youtubeLink) {\n            inner = youtubeLink;\n          } else if (instagramEmbed) {\n            inner = instagramEmbed;\n          } else {\n            inner = src;\n          }\n\n          // Determine whether the src link is an image\n          const isImg = !youtubeLink && !instagramEmbed;\n          if (regex.test(src)) {\n            src = src.replace(regex, '');\n          }\n          const imgClasses = this.settings.constrain ? 'mw-100 mh-100 h-auto w-auto m-auto top-0 end-0 bottom-0 start-0' : 'h-100 w-100';\n          const params = new URLSearchParams(src.split('?')[1]);\n          let caption = params.get('caption') ? `<p class=\"lightbox-caption m-0 p-2 text-center text-white small\"><em>${params.get('caption')}</em></p>` : '';\n          let url = src;\n          if (caption) {\n            try {\n              url = new URL(src);\n              url.searchParams.delete('caption');\n              url = url.toString();\n            } catch (e) {\n              url = src;\n            }\n          }\n\n          // Returning data to use in template\n          return {\n            imgClasses: imgClasses,\n            url: url,\n            caption: caption,\n            isHtml: isHtml,\n            isForcedImage: isForcedImage,\n            isImg: isImg,\n            inner: inner\n          };\n        });\n      });\n    }\n    next = function () {\n      if (this.hasImages()) {\n        var nextIndex = this.currentIndex() < this.images().length - 1 ? this.currentIndex() + 1 : 0;\n        this.currentIndex(nextIndex);\n      }\n    };\n    prev = function () {\n      if (this.hasImages()) {\n        var prevIndex = this.currentIndex() > 0 ? this.currentIndex() - 1 : this.images().length - 1;\n        this.currentIndex(prevIndex);\n      }\n    };\n    attachArrowKeyHandlers() {\n      $(document).on('keydown', e => {\n        if (e.keyCode === 37) {\n          // Left arrow key\n          this.prev();\n        }\n        if (e.keyCode === 39) {\n          // Right arrow key\n          this.next();\n        }\n      }).detach();\n    }\n    detachArrowKeyHandlers() {\n      $(document).off('keydown');\n    }\n    openModal(index) {\n      if (this.hasImages()) {\n        this.currentIndex(index);\n        $(\"#lightboxModal\").modal('show');\n        this.attachArrowKeyHandlers();\n        $('#lightboxModal').on('hidden.bs.modal', function () {\n          this.detachArrowKeyHandlers();\n        });\n      }\n    }\n    closeModal() {\n      $(\"#lightboxModal\").modal('hide');\n    }\n    setOptionsFromSettings(obj) {\n      return Object.keys(obj).reduce((p, c) => Object.assign(p, {\n        [c]: this.settings[c]\n      }), {});\n    }\n    randomHash(length = 8) {\n      return Array.from({\n        length\n      }, () => Math.floor(Math.random() * 36).toString(36)).join('');\n    }\n  },\n  // language=HTML\n  template: `\n        <!-- ko if: hasImages -->\n        <div class=\"modal lightbox fade\" id=\"lightboxModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n                <div class=\"modal-content border-0 bg-transparent\">\n                    <div class=\"modal-body p-0\">\n                        <button type=\"button\" class=\"btn-close btn-close-white position-absolute top-0 end-0 p-3\"\n                                data-bs-dismiss=\"modal\" aria-label=\"Close\" style=\"font-size: 2rem;z-index: 2; background: none;\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        <!-- Carousel code here -->\n                        <div class=\"lightbox-carousel carousel slide\"\n                             data-bind=\"css: carouselClasses, carousel: carouselOptions\">\n                            <div class=\"carousel-inner\" data-bind=\"foreach: {data: processedImages, as: 'image'}\">\n                                <div class=\"carousel-item\"\n                                     data-bind=\"css: {'active': $index() === $parent.currentIndex()}, style: { minHeight: '100px' }\">\n                                    <div class=\"position-absolute top-50 start-50 translate-middle text-white\">\n                                        <div class=\"spinner-border\" role=\"status\"></div>\n                                    </div>\n                                    <div class=\"ratio ratio-16x9\" style=\"background-color: #000;\">\n                                        <!-- ko if: image.isImg -->\n                                        <img data-bind=\"attr: { src: image.url, class: 'd-block ' + image.imgClasses + ' img-fluid', style: { 'z-index': 1, 'object-fit': 'contain' } }\"/>\n                                        <!-- /ko -->\n\n                                        <!-- ko ifnot: image.isImg -->\n                                        <iframe data-bind=\"attr: { src: image.inner, title: image.isYoutube ? 'YouTube video player' : 'Instagram Embed', frameborder: '0', allow: image.isYoutube ? 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' : '', allowfullscreen: true }\"></iframe>\n                                        <!-- /ko -->\n                                    </div>\n                                    <!-- ko if: image.caption -->\n                                    <p class=\"lightbox-caption m-0 p-2 text-center text-white small\"\n                                       data-bind=\"html: image.caption\"></p>\n                                    <!-- /ko -->\n                                </div>\n                            </div>\n                            <!-- Carousel Controls -->\n                            <!-- ko if: images().length > 0 -->\n                            <button class=\"carousel-control carousel-control-prev h-75 m-auto\" type=\"button\"\n                                    data-bs-target=\"#lightboxCarousel\" data-bs-slide=\"prev\" data-bind=\"click: prev\">\n                                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                <span class=\"visually-hidden\">Previous</span>\n                            </button>\n                            <button class=\"carousel-control carousel-control-next h-75 m-auto\" type=\"button\"\n                                    data-bs-target=\"#lightboxCarousel\" data-bs-slide=\"next\" data-bind=\"click: next\">\n                                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                <span class=\"visually-hidden\">Next</span>\n                            </button>\n                            <!-- /ko -->\n                        </div>\n                        <!-- You might replace it with the carousel component in bootstrap -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- /ko -->\n        <!-- Only display if there are images -->\n        <!-- ko if: hasImages -->\n        <div class=\"row\">\n            <!-- Iterate over the first four images or all if less than four -->\n            <!-- ko foreach: images.slice(0, 4) -->\n            <div class=\"col-md-3\">\n                <div class=\"img-container-building\">\n                    <img data-bind=\"attr: { src: src, alt: alt }, click: function() { $parent.openModal($index()) }\"\n                         class=\"img-thumbnail-building cursor-pointer\"/>\n\n                    <!-- If it's the fourth image and there are additional images, show overlay -->\n                    <!-- ko if: $index() === 3 && $parent.additionalImageCount() > 0 -->\n                    <div class=\"overlay\" data-bind=\"click: function() { $parent.openModal($index()) }\">\n                        <span class=\"additional-count\">+<!-- ko text: $parent.additionalImageCount -->\n                            <!-- /ko --></span>\n                    </div>\n                    <!-- /ko -->\n                </div>\n            </div>\n            <!-- /ko -->\n        </div>\n        <!-- /ko -->\n\n        <!-- Display message if there are no images -->\n        <!-- ko ifnot: hasImages -->\n        <div class=\"col-12\">\n            <p class=\"text-center\">No images available.</p>\n        </div>\n        <!-- /ko -->\n    `\n});\n\n//# sourceURL=webpack://bookingfrontend_2/./src/components/light-box.js?");

/***/ }),

/***/ "./src/helpers/translation.js":
/*!************************************!*\
  !*** ./src/helpers/translation.js ***!
  \************************************/
/***/ (() => {

eval("/**\n *\n */\n\nif (!globalThis['trans']) {\n  // Initialize translations as a Knockout observable object\n  globalThis['translations'] = ko.observable({});\n  const getJsonURL = phpGWLink('bookingfrontend/lang.php', null, true);\n  fetch(getJsonURL).then(a => a.json()).then(a => globalThis['translations'](a));\n\n  // Define the translate function\n  globalThis['trans'] = (group, tag, ...args) => {\n    // Retrieve the current value of the translations observable\n    const translations = globalThis['translations']();\n\n    // Function to process translation for a single group\n    const processTranslation = singleGroup => {\n      // Check if the group exists in the translations\n      if (translations[singleGroup] && translations[singleGroup][tag]) {\n        // Retrieve the template string for the specified group and tag\n        let template = translations[singleGroup][tag];\n\n        // Replace each placeholder with the corresponding argument\n        return template.replace(/%\\d+/g, placeholder => {\n          // Extract the number from the placeholder, convert it to index (0-based)\n          const index = parseInt(placeholder.substring(1)) - 1;\n          // Replace placeholder with the argument, if exists, otherwise keep the placeholder\n          return args[index] !== undefined ? args[index] : placeholder;\n        });\n      }\n      return null; // Indicate no translation found for this group\n    };\n\n    // Check if group is an array and try to find a translation in one of the groups\n    if (Array.isArray(group)) {\n      for (let i = 0; i < group.length; i++) {\n        const translation = processTranslation(group[i]);\n        // if(translation) {\n        //     console.log(\"found translation\", group[i], tag, translation)\n        // }\n        if (translation !== null) return translation;\n      }\n    } else {\n      // If group is not an array, process it directly\n      const translation = processTranslation(group);\n      // if(translation) {\n      //     console.log(\"found translation\", group, tag, translation)\n      // }\n      if (translation !== null) return translation;\n    }\n\n    // If no translation was found in the specified groups, and 'common' wasn't already tried, try 'common'\n    if (!Array.isArray(group) || !group.includes('common')) {\n      const commonTranslation = processTranslation('common');\n      // if(commonTranslation) {\n      //     console.log(\"found translation\", 'common', tag, translation)\n      // }\n      if (commonTranslation !== null) return commonTranslation;\n    }\n\n    // If no translation was found even in 'common', return a fallback string\n    return `Missing translation for [${Array.isArray(group) ? group.join(', ') : group}][${tag}]`;\n  };\n  class TransViewModel {\n    constructor(params, componentInfo) {\n      let translationTagParts = componentInfo.templateNodes.map(a => a.textContent);\n      if (translationTagParts.length === 1) {\n        if (translationTagParts[0].includes(':')) {\n          translationTagParts = translationTagParts[0].split(':');\n        }\n      }\n      translationTagParts = translationTagParts.map(text => text.trim());\n\n      // Adjust to handle the case where translationTagParts might not have both parts due to splitting by ':'\n      if (translationTagParts.length >= 2) {\n        this.tag = ko.observable(translationTagParts[1]);\n        this.group = ko.observable(translationTagParts[0]);\n      } else {\n        this.tag = typeof params.tag === 'function' ? params.tag : ko.observable(params.tag);\n        this.group = typeof params.group === 'function' ? params.group : ko.observable(params.group);\n      }\n\n      // Accepting suffix parameter\n      this.suffix = ko.observable(params.suffix || ''); // Default to empty if not provided\n\n      this.args = ko.observable(params.args);\n      this.translations = globalThis['translations'];\n      this.translated = ko.computed(() => {\n        if (self.translations && self.translations() && Object.keys(self.translations()).length > 0 && this.group && this.tag) {\n          let translation = globalThis['trans'](this.group(), this.tag(), this.args());\n          // Apply suffix if it exists\n          return translation + this.suffix();\n        }\n      });\n    }\n  }\n  ko.components.register('trans', {\n    viewModel: {\n      createViewModel: function (params, componentInfo) {\n        return new TransViewModel(params, componentInfo); // Create a new instance of the view model class for each component instance\n      }\n    },\n    // language=HTML\n    template: `<!--ko text: translated()--><!--/ko-->`\n  });\n\n  // console.log(\"LOADED TRANSLATIONS\", trans('tag', 'test'))\n}\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/translation.js?");

/***/ }),

/***/ "./src/helpers/util.js":
/*!*****************************!*\
  !*** ./src/helpers/util.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onDocumentReady: () => (/* binding */ onDocumentReady),\n/* harmony export */   phpGWLink: () => (/* binding */ phpGWLink)\n/* harmony export */ });\n/* harmony import */ var _translation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./translation */ \"./src/helpers/translation.js\");\n/* harmony import */ var _translation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_translation__WEBPACK_IMPORTED_MODULE_0__);\n/* global monthList, months */\n\nfunction getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\nvar Util = function () {\n  //Formattering\n  var format = function () {\n    var formatDateForBackend = function (date) {\n      if (date === \"\") {\n        return \"\";\n      }\n      var fDate = new Date(date);\n      return fDate.getFullYear() + \"-\" + (fDate.getMonth() + 1) + \"-\" + fDate.getDate() + \" \" + fDate.getHours() + \":\" + fDate.getMinutes() + \":\" + fDate.getSeconds() + \"\";\n    };\n    var getDateFormat = function (from, to) {\n      let ret = [];\n      let fromDate = new Date(from.replace(\" \", \"T\"));\n      let toDate = new Date(to.replace(\" \", \"T\"));\n      //\t\t\tlet fromDate = new Date(from);\n      //\t\t\tlet toDate = new Date(to);\n\n      if (fromDate.getDate() === toDate.getDate()) {\n        ret.push(fromDate.getDate() + \". \");\n        let month = monthList[fromDate.getMonth()];\n        ret.push(months[month]);\n        return ret;\n      } else {\n        ret.push(fromDate.getDate() + \".-\" + toDate.getDate() + \".\");\n        let month = monthList[fromDate.getMonth()];\n        ret.push(months[month]);\n        return ret;\n      }\n    };\n    var getTimeFormat = function (from, to) {\n      let fromDate = new Date(from.replace(\" \", \"T\"));\n      let toDate = new Date(to.replace(\" \", \"T\"));\n      //\t\t\tlet fromDate = new Date(from);\n      //\t\t\tlet toDate = new Date(to);\n      let ret;\n      ret = (fromDate.getHours() < 10 ? '0' + fromDate.getHours() : fromDate.getHours()) + \":\" + (fromDate.getMinutes() < 10 ? '0' + fromDate.getMinutes() : fromDate.getMinutes()) + \" - \" + (toDate.getHours() < 10 ? '0' + toDate.getHours() : toDate.getHours()) + \":\" + (toDate.getMinutes() < 10 ? '0' + toDate.getMinutes() : toDate.getMinutes());\n      return ret;\n    };\n    return {\n      FormatDateForBackend: formatDateForBackend,\n      GetDateFormat: getDateFormat,\n      GetTimeFormat: getTimeFormat\n    };\n  }();\n  return {\n    Format: format\n  };\n}();\n\n/**\n * Emulate phpGW's link function\n *\n * @param String strURL target URL\n * @param Object oArgs Query String args as associate array object\n * @param bool bAsJSON ask that the request be returned as JSON (experimental feature)\n * @param String baseURL (optional) Base URL to use instead of strBaseURL\n * @returns String URL\n */\nfunction phpGWLink(strURL, oArgs, bAsJSON, baseURL) {\n  // console.log(strBaseURL)\n  if (baseURL) {\n    const baseURLParts = baseURL.split('/').filter(a => a !== '' && !a.includes('http'));\n    baseURL = '//' + baseURLParts.slice(0, baseURLParts.length - 1).join('/') + '/'; // Remove last element (file name)\n  }\n  const urlParts = (baseURL || strBaseURL).split('?');\n  let newURL = urlParts[0] + strURL + '?';\n  if (oArgs == null) {\n    oArgs = new Object();\n  }\n  for (const key in oArgs) {\n    newURL += key + '=' + oArgs[key] + '&';\n  }\n  if (urlParts[1]) {\n    newURL += urlParts[1];\n  }\n  if (bAsJSON) {\n    newURL += '&phpgw_return_as=json';\n  }\n  return newURL;\n}\n$(document).ready(function () {\n  $(\"input[type=radio][name=select_template]\").change(function () {\n    var template = $(this).val();\n    var oArgs = {\n      menuaction: 'bookingfrontend.preferences.set'\n    };\n    var requestUrl = phpGWLink('bookingfrontend/', oArgs, true);\n    $.ajax({\n      type: 'POST',\n      dataType: 'json',\n      data: {\n        template_set: template\n      },\n      url: requestUrl,\n      success: function (data) {\n        //\t\tconsole.log(data);\n        location.reload(true);\n      }\n    });\n  });\n  $(\"input[type=radio][name=select_language]\").change(function () {\n    var lang = $(this).val();\n    var oArgs = {\n      menuaction: 'bookingfrontend.preferences.set'\n    };\n    var requestUrl = phpGWLink('bookingfrontend/', oArgs, true);\n    $.ajax({\n      type: 'POST',\n      dataType: 'json',\n      data: {\n        lang: lang\n      },\n      url: requestUrl,\n      success: function (data) {\n        location.reload(true);\n      }\n    });\n  });\n});\nfunction onDocumentReady(fn) {\n  // see if DOM is already available\n  if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n    // call on next available tick\n    setTimeout(fn, 1);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  }\n}\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/util.js?");

/***/ }),

/***/ "./src/helpers/withAfterRender.js":
/*!****************************************!*\
  !*** ./src/helpers/withAfterRender.js ***!
  \****************************************/
/***/ (() => {

eval("ko.bindingHandlers.withAfterRender = {\n  init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n    var value = valueAccessor();\n    ko.applyBindingsToNode(element, {\n      visible: true\n    }, bindingContext);\n    if (value.afterRender) {\n      value.afterRender(element);\n    }\n  }\n};\n\n//# sourceURL=webpack://bookingfrontend_2/./src/helpers/withAfterRender.js?");

/***/ }),

/***/ "./src/pages/resource.js":
/*!*******************************!*\
  !*** ./src/pages/resource.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_light_box__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/light-box */ \"./src/components/light-box.js\");\n/* harmony import */ var _components_light_box__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components_light_box__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_collapsable_text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/collapsable-text */ \"./src/components/collapsable-text.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _components_application_cart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/application-cart */ \"./src/components/application-cart.js\");\n\n\n\n\nvar booking_month_horizon = 2;\n$(\".navbar-search\").removeClass(\"d-none\");\nvar events = ko.observableArray();\nvar date = new Date();\n//var urlParams = new URLSearchParams(window.location.search);\nvar urlParams = CreateUrlParams(window.location.search);\n//var baseURL = document.location.origin + \"/\" + window.location.pathname.split('/')[1] + \"/bookingfrontend/\";\nvar baseURL = strBaseURL.split('?')[0] + \"bookingfrontend/\";\nvar availlableTimeSlots = ko.observableArray();\n$(\".bookable-timeslots-link-href\").attr('data-bind', \"attr: {'href': applicationLink }\");\nvar imageArray = ko.observableArray();\nvar selectedDescription = ko.observable();\n\n/**\n * Represents a model for building management, encapsulating resources and events.\n */\nclass ResourceModel {\n  constructor() {\n    this.availlableTimeSlots = availlableTimeSlots;\n    this.imageArray = imageArray;\n    this.items = events;\n    this.selectedDescription = selectedDescription;\n    this.resourcesExpanded = ko.observable(false);\n    this.toggleResources = this.toggleResources.bind(this);\n  }\n  /**\n   * Toggles the visibility of additional resources.\n   */\n  toggleResources() {\n    this.resourcesExpanded(!this.resourcesExpanded());\n  }\n}\nconst buildingModel = new ResourceModel();\nko.applyBindings(buildingModel, document.getElementById('resource-page-content'));\n$(document).ready(function () {\n  $(\".overlay\").show();\n  if (typeof urlParams['date'] !== \"undefined\") {\n    date = new Date(urlParams['date']);\n  }\n  if (simple_booking == 1) {\n    getFreetime(urlParams);\n  }\n  selectedDescription(initialDesc);\n  PopulateResourceData();\n  // if (deactivate_calendar == 0)\n  // {\n  // \tPopulateCalendarEvents();\n  // }\n  $(document).on('click', '#list-img-thumbs img', function () {\n    $(\".main-picture\").attr(\"src\", this.src);\n  });\n  var bookBtnURL = phpGWLink('bookingfrontend/', {\n    menuaction: \"bookingfrontend.uiapplication.add\",\n    building_id: building_id,\n    resource_id: urlParams['id'],\n    simple: simple_booking\n  }, false);\n  $(\".bookBtnForward\").attr(\"href\", bookBtnURL);\n  $(\".goToCal\").click(function () {\n    $('html,body').animate({\n      scrollTop: $(\".calendar-content\").offset().top - 100\n    }, 'slow');\n  });\n  $(document).on('click', '.tooltip-desc-btn', function () {\n    $(this).find(\".tooltip-desc\").show();\n  });\n  $(\".overlay\").hide();\n});\nfunction PopulateResourceData() {\n  const getJsonURL = phpGWLink('bookingfrontend/', {\n    menuaction: \"bookingfrontend.uidocument_resource.index_images\",\n    filter_owner_id: urlParams['id'],\n    length: -1\n  }, true);\n  $.getJSON(getJsonURL, function (result) {\n    var mainPictureFound = false;\n    if (result.ResultSet.Result.length > 0) {\n      // for (var i = 0; i < result.ResultSet.Result.length; i++)\n      // {\n      // \tvar src = phpGWLink('bookingfrontend/', {menuaction: \"bookingfrontend.uidocument_resource.download\", id: result.ResultSet.Result[i].id, filter_owner_id: urlParams['id']}, false);\n      // \tvar imgTag = '<img src=\"' + src + '\"  data-toggle=\"modal\" data-target=\"#lightbox\" class=\"img-thumbnail m-1\" alt=\"\"></img>';\n      // \t$(\".resource-images\").append(imgTag);\n      // \tif (result.ResultSet.Result[i].category == 'picture_main' && !mainPictureFound)\n      // \t{\n      // \t\tmainPictureFound = true;\n      // \t\t$(\"#item-main-picture\").attr(\"src\", src);\n      // \t}\n      // }\n      imageArray(result.ResultSet.Result.map((img, indx) => {\n        var src = phpGWLink('bookingfrontend/', {\n          menuaction: \"bookingfrontend.uidocument_resource.download\",\n          id: img.id,\n          filter_owner_id: urlParams['id']\n        }, false);\n        // images.push({src, alt: ''})\n        return {\n          src,\n          alt: img.description\n        };\n      }));\n      console.log(imageArray());\n    } else {\n      $(\".card-img-thumbs\").remove();\n    }\n    if (!mainPictureFound) {\n      $(\".col-item-img\").remove();\n    }\n  });\n}\nfunction getFreetime(urlParams) {\n  var checkDate = new Date();\n  var EndDate = new Date(checkDate.getFullYear(), checkDate.getMonth() + booking_month_horizon, 0);\n  var getJsonURL = phpGWLink('bookingfrontend/', {\n    menuaction: \"bookingfrontend.uibooking.get_freetime\",\n    building_id: urlParams['building_id'],\n    resource_id: urlParams['id'],\n    start_date: formatSingleDateWithoutHours(new Date()),\n    end_date: formatSingleDateWithoutHours(EndDate)\n  }, true);\n  $.getJSON(getJsonURL, function (result) {\n    for (var key in result) {\n      for (var i = 0; i < result[key].length; i++) {\n        if (typeof result[key][i].applicationLink != 'undefined') {\n          result[key][i].applicationLink = phpGWLink('bookingfrontend/', result[key][i].applicationLink);\n        }\n        availlableTimeSlots.push(result[key][i]);\n      }\n    }\n  });\n}\nfunction ForwardToNewApplication(start, end, resource) {\n  window.location.href = phpGWLink('bookingfrontend/', {\n    menuaction: \"bookingfrontend.uiapplication.add\",\n    building_id: building_id,\n    resource_id: typeof resource === 'undefined' ? \"\" : resource,\n    start: typeof start === 'undefined' ? \"\" : roundMinutes(start),\n    end: typeof end === 'undefined' ? \"\" : roundMinutes(end),\n    simple: simple_booking\n  }, false);\n}\nfunction roundMinutes(date) {\n  var date = new Date(date);\n  if (date.getMinutes <= 7 || date.getMinutes >= 53) {\n    date.setMinutes(0);\n  } else if (date.getMinutes >= 8 || date.getMinutes <= 22) {\n    date.setMinutes(15);\n  } else if (date.getMinutes >= 23 || date.getMinutes <= 37) {\n    date.setMinutes(30);\n  } else if (date.getMinutes >= 38 || date.getMinutes <= 52) {\n    date.setMinutes(45);\n  }\n  return date.getTime();\n}\nfunction IsExistingEvent(id, eventsArray) {\n  for (var i = 0; i < eventsArray.length; i++) {\n    if (eventsArray[i].id == id) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// function PopulateCalendarEvents()\n// {\n// \t$(\".overlay\").show();\n// \t$('.weekNumber').remove();\n// \tvar eventsArray = [];\n// \tvar paramDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n// \tvar colors = {\"allocation\": \"#82368c\", \"booking\": \"#27348b\", \"event\": \"#6c9ad1\", boundery: '#0cf296'}\n// //  getJsonURL = baseURL+\"?menuaction=bookingfrontend.uibooking.resource_schedule&resource_id=\"+urlParams['id']+\"&date=\"+paramDate+\"&phpgw_return_as=json\";\n// \tgetJsonURL = phpGWLink('bookingfrontend/', {menuaction: \"bookingfrontend.uibooking.resource_schedule\", resource_id: urlParams['id'], date: paramDate}, true);\n//\n// \t$.getJSON(getJsonURL, function (result)\n// \t{\n// \t\tif (result.ResultSet.totalResultsAvailable > 0)\n// \t\t{\n// \t\t\tfor (var k = 0; k < result.ResultSet.Result.length; k++)\n// \t\t\t{\n// \t\t\t\tvar visible = true;\n//\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Sun !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Sun.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Sun.from_, result.ResultSet.Result[k].Sun.type, result.ResultSet.Result[k].Sun.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Sun.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Sun.date + \"T\" + result.ResultSet.Result[k].Sun.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Sun.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Sun.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Sun.date + \"T\" + result.ResultSet.Result[k].Sun.to_).toString());\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Sun.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Sun.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Sun.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Sun.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Sun.from_, result.ResultSet.Result[k].Sun.type, result.ResultSet.Result[k].Sun.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Sun.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"'></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Sun.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n//\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Mon !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Mon.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Mon.from_, result.ResultSet.Result[k].Mon.type, result.ResultSet.Result[k].Mon.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Mon.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Mon.date + \"T\" + result.ResultSet.Result[k].Mon.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setDate((result.ResultSet.Result[k].Mon.date).substring(8, 10));\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Mon.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Mon.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Mon.date + \"T\" + result.ResultSet.Result[k].Mon.to_).toString());\n//\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Mon.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setDate((result.ResultSet.Result[k].Mon.date).substring(8, 10));\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Mon.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Mon.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Mon.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Mon.from_, result.ResultSet.Result[k].Mon.type, result.ResultSet.Result[k].Mon.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Mon.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"'></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Mon.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Tue !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Tue.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Tue.from_, result.ResultSet.Result[k].Tue.type, result.ResultSet.Result[k].Tue.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Tue.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Tue.date + \"T\" + result.ResultSet.Result[k].Tue.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setDate((result.ResultSet.Result[k].Tue.date).substring(8, 10));\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Tue.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Tue.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Tue.date + \"T\" + result.ResultSet.Result[k].Tue.to_).toString());\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Tue.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setDate((result.ResultSet.Result[k].Tue.date).substring(8, 10));\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Tue.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Tue.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Tue.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Tue.from_, result.ResultSet.Result[k].Tue.type, result.ResultSet.Result[k].Tue.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Tue.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"'></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Tue.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Wed !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Wed.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Wed.from_, result.ResultSet.Result[k].Wed.type, result.ResultSet.Result[k].Wed.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Wed.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Wed.date + \"T\" + result.ResultSet.Result[k].Wed.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setDate((result.ResultSet.Result[k].Wed.date).substring(8, 10));\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Wed.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Wed.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Wed.date + \"T\" + result.ResultSet.Result[k].Wed.to_).toString());\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Wed.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setDate((result.ResultSet.Result[k].Wed.date).substring(8, 10));\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Wed.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Wed.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Wed.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Wed.from_, result.ResultSet.Result[k].Wed.type, result.ResultSet.Result[k].Wed.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Wed.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"'></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Wed.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Thu !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Thu.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Thu.from_, result.ResultSet.Result[k].Thu.type, result.ResultSet.Result[k].Thu.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Thu.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Thu.date + \"T\" + result.ResultSet.Result[k].Thu.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setDate((result.ResultSet.Result[k].Thu.date).substring(8, 10));\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Thu.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Thu.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Thu.date + \"T\" + result.ResultSet.Result[k].Thu.to_).toString());\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Thu.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setDate((result.ResultSet.Result[k].Thu.date).substring(8, 10));\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Thu.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Thu.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Thu.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Thu.from_, result.ResultSet.Result[k].Thu.type, result.ResultSet.Result[k].Thu.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Thu.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"'></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Thu.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Fri !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Fri.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Fri.from_, result.ResultSet.Result[k].Fri.type, result.ResultSet.Result[k].Fri.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Fri.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Fri.date + \"T\" + result.ResultSet.Result[k].Fri.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setDate((result.ResultSet.Result[k].Fri.date).substring(8, 10));\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Fri.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Fri.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Fri.date + \"T\" + result.ResultSet.Result[k].Fri.to_).toString());\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Fri.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setDate((result.ResultSet.Result[k].Fri.date).substring(8, 10));\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Fri.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Fri.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Fri.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Fri.from_, result.ResultSet.Result[k].Fri.type, result.ResultSet.Result[k].Fri.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Fri.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"'></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Fri.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t\tif (typeof result.ResultSet.Result[k].Sat !== \"undefined\" &&\n// \t\t\t\t\t!IsExistingEvent([\n// \t\t\t\t\t\tresult.ResultSet.Result[k].Sat.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Sat.from_, result.ResultSet.Result[k].Sat.type, result.ResultSet.Result[k].Sat.wday\n// \t\t\t\t].join(\".\"), eventsArray))\n// \t\t\t\t{\n// \t\t\t\t\tvar event_infourl = result.ResultSet.Result[k].Sat.info_url;\n// \t\t\t\t\twhile (event_infourl.indexOf(\"amp;\") !== -1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tevent_infourl = event_infourl.replace(\"amp;\", '');\n// \t\t\t\t\t}\n// \t\t\t\t\tvar currentStartDate = new Date((result.ResultSet.Result[k].Sat.date + \"T\" + result.ResultSet.Result[k].Sat.from_).toString());\n// \t\t\t\t\tcurrentStartDate.setDate((result.ResultSet.Result[k].Sat.date).substring(8, 10));\n// \t\t\t\t\tcurrentStartDate.setHours((result.ResultSet.Result[k].Sat.from_).substring(0, 2));\n// \t\t\t\t\tcurrentStartDate.setMinutes((result.ResultSet.Result[k].Sat.from_).substring(3, 5));\n//\n// \t\t\t\t\tvar currentEndDate = new Date((result.ResultSet.Result[k].Sat.date + \"T\" + result.ResultSet.Result[k].Sat.to_).toString());\n// \t\t\t\t\tif ((result.ResultSet.Result[k].Sat.to_).substring(0, 2) != \"24\")\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentEndDate.setDate((result.ResultSet.Result[k].Sat.date).substring(8, 10));\n// \t\t\t\t\t\tcurrentEndDate.setHours((result.ResultSet.Result[k].Sat.to_).substring(0, 2));\n// \t\t\t\t\t\tcurrentEndDate.setMinutes((result.ResultSet.Result[k].Sat.to_).substring(3, 5));\n// \t\t\t\t\t}\n// \t\t\t\t\telse\n// \t\t\t\t\t{\n// \t\t\t\t\t\tcurrentStartDate = new Date(currentStartDate.getFullYear(), currentStartDate.getMonth(), currentStartDate.getDate());\n// \t\t\t\t\t\tcurrentEndDate = new Date(currentEndDate.getFullYear(), currentEndDate.getMonth(), currentEndDate.getDate());\n// \t\t\t\t\t}\n//\n// \t\t\t\t\teventsArray.push({id: [\n// \t\t\t\t\t\t\tresult.ResultSet.Result[k].Sat.id, result.ResultSet.Result[k].resource, result.ResultSet.Result[k].Sat.from_, result.ResultSet.Result[k].Sat.type, result.ResultSet.Result[k].Sat.wday\n// \t\t\t\t\t\t].join(\".\"),\n// \t\t\t\t\t\tname: result.ResultSet.Result[k].resource,\n// \t\t\t\t\t\tresource: result.ResultSet.Result[k].resource_id,\n// \t\t\t\t\t\tcolor: colors[result.ResultSet.Result[k].Sat.type],\n// \t\t\t\t\t\tcontent: \"<span data-url='\" + event_infourl + \"' class='event-id' value='\" + result.ResultSet.Result[k].resource + \"' ></span>\",\n// \t\t\t\t\t\tdescription: result.ResultSet.Result[k].Sat.description,\n// \t\t\t\t\t\tstartDate: currentStartDate,\n// \t\t\t\t\t\tendDate: currentEndDate,\n// \t\t\t\t\t\tdisabled: true,\n// \t\t\t\t\t\tvisible: visible\n// \t\t\t\t\t});\n// \t\t\t\t}\n//\n// \t\t\t}\n// \t\t}\n//\n// \t})\n// \t\t.done(function ()\n// \t\t{\n// \t\t\tevents = eventsArray;\n// \t\t\tsetTimeout(function ()\n// \t\t\t{\n// \t\t\t\tGenerateCalendarForEvents(date);\n// \t\t\t\t$(\".overlay\").hide();\n// \t\t\t}, 1000);\n// \t\t});\n// }\n\nfunction tooltipDetails() {\n  var tooltipText = \"\";\n  var url = $(this).find('.event-id')[0];\n  url = url.getAttribute(\"data-url\");\n  if (!url) {\n    return false;\n  }\n  $.ajax({\n    url: url,\n    type: 'GET',\n    async: false,\n    success: function (response) {\n      tooltipText = response;\n    }\n  });\n  return tooltipText;\n}\n//\n// function GenerateCalendarForEvents(date)\n// {\n// \t$(\"#myScheduler .scheduler-base-content\").first().remove();\n// \t$(\"#mySchedulerSmallDeviceView .scheduler-base-content\").first().remove();\n//\n// \tYUI({lang: 'nb-NO'}).use(\n// \t\t'aui-scheduler',\n// \t\tfunction (Y)\n// \t\t{\n// \t\t\tvar CSS_SCHEDULER_TODAY = Y.getClassName('scheduler', 'today');\n//\n// \t\t\tvar CSS_SCHEDULER_VIEW_DAY_TABLE_COL = Y.getClassName('scheduler-view', 'day', 'table', 'col');\n// \t\t\tvar CSS_SCHEDULER_VIEW_DAY_TABLE_COL_SHIM = Y.getClassName('scheduler-view', 'day', 'table', 'col', 'shim');\n// \t\t\tvar CSS_SCHEDULER_VIEW_DAY_TABLE_COLDAY = Y.getClassName('scheduler-view', 'day', 'table', 'colday');\n// \t\t\tvar TPL_SCHEDULER_VIEW_DAY_TABLE_COLDAY = '<td class=\"' + [\n// \t\t\t\tCSS_SCHEDULER_VIEW_DAY_TABLE_COL,\n// \t\t\t\tCSS_SCHEDULER_VIEW_DAY_TABLE_COLDAY\n// \t\t\t].join(' ') + '\" data-colnumber=\"{colNumber}\" style=\"border-left-style: {borderStyle}\">' +\n// \t\t\t\t'<div class=\"' + CSS_SCHEDULER_VIEW_DAY_TABLE_COL_SHIM + '\">&nbsp;</div>' +\n// \t\t\t\t'</td>';\n//\n// \t\t\tvar CSS_SCHEDULER_VIEW_DAY_HEADER_DAY = Y.getClassName('scheduler-view', 'day', 'header', 'day');\n// \t\t\tvar CSS_SCHEDULER_VIEW_DAY_HEADER_DAY_FIRST = Y.getClassName('scheduler-view', 'day', 'header', 'day', 'first');\n// \t\t\tvar TPL_SCHEDULER_VIEW_DAY_HEADER_DAY_FIRST = '<td class=\"' + [\n// \t\t\t\tCSS_SCHEDULER_VIEW_DAY_HEADER_DAY,\n// \t\t\t\tCSS_SCHEDULER_VIEW_DAY_HEADER_DAY_FIRST].join(' ') + '\"></td>';\n// \t\t\tvar TPL_SCHEDULER_VIEW_DAY_HEADER_DAY = '<th class=\"' + CSS_SCHEDULER_VIEW_DAY_HEADER_DAY +\n// \t\t\t\t'\" data-colnumber=\"{colNumber}\" colspan=\"{colSpan}\"><a href=\"#\">&nbsp;</a></th>';\n//\n// \t\t\tvar roundToNearestMultiple = function (n, multiple)\n// \t\t\t{\n// \t\t\t\treturn Math.round(n / multiple) * multiple;\n// \t\t\t};\n//\n// \t\t\tvar toNumber = function (v)\n// \t\t\t{\n// \t\t\t\treturn parseFloat(v) || 0;\n// \t\t\t};\n//\n// \t\t\tvar SchedulerResourceDayView = Y.Component.create({\n// \t\t\t\tNAME: 'scheduler-view-day-resource',\n// \t\t\t\tEXTENDS: Y.SchedulerDayView,\n// \t\t\t\tATTRS: {\n// \t\t\t\t\tname: {\n// \t\t\t\t\t\tvalue: 'resources'\n// \t\t\t\t\t},\n// \t\t\t\t\tresources: {\n// \t\t\t\t\t\tvalue: [0]\n// \t\t\t\t\t},\n// \t\t\t\t\tresourcenames: {\n// \t\t\t\t\t\tvalue: ['Ingen']\n// \t\t\t\t\t}\n// \t\t\t\t},\n//\n// \t\t\t\tprototype: {\n// \t\t\t\t\tgetColumnShimByResource: function (resource)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tvar index = resources.indexOf(resource);\n// \t\t\t\t\t\tif (0 <= index && index < this.columnShims.size())\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\treturn this.columnShims.item(index);\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\treturn null;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tplotEvent: function (evt)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar nodeList = evt.get('node');\n// \t\t\t\t\t\tif (nodeList.size() < 2)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tevt.addPaddingNode();\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tvar node = evt.get('node').item(0);\n// \t\t\t\t\t\tvar paddingNode = evt.get('node').item(1);\n// \t\t\t\t\t\tvar shim = this.getColumnShimByResource(evt.get('resource'));\n// \t\t\t\t\t\tif (shim)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tshim.append(node);\n// \t\t\t\t\t\t\tif (evt.get('visible'))\n// \t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\tnode.show();\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tnode.hide();\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tevt.syncUI();\n// \t\t\t\t\t\tthis.syncEventTopUI(evt);\n// \t\t\t\t\t\tthis.syncEventHeightUI(evt);\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tplotEvents: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar scheduler = this.get('scheduler');\n// \t\t\t\t\t\tvar filterFn = this.get('filterFn');\n// \t\t\t\t\t\tvar events = scheduler.getEventsByDay(scheduler.get('date'), true);\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tscheduler.flushEvents();\n// \t\t\t\t\t\tvar view = this;\n// \t\t\t\t\t\tthis.columnShims.each(function (colShimNode, i)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tvar plottedEvents = [];\n// \t\t\t\t\t\t\tvar columnEvents = Y.Array.filter(\n// \t\t\t\t\t\t\t\tevents,\n// \t\t\t\t\t\t\t\tfunction (event)\n// \t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\treturn event.get('resource') === resources[i];\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\tcolShimNode.empty();\n// \t\t\t\t\t\t\tY.Array.each(columnEvents, function (evt)\n// \t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\tif (filterFn.apply(view, [evt]))\n// \t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\tview.plotEvent(evt);\n// \t\t\t\t\t\t\t\t\tplottedEvents.push(evt);\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\tview.syncEventsIntersectionUI(plottedEvents);\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tthis.syncHeaderViewUI();\n// \t\t\t\t\t\tthis.syncCurrentTimeUI();\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tsyncColumnsUI: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tvar todayDate = this.get('scheduler').get('todayDate');\n// \t\t\t\t\t\tvar view = this;\n// \t\t\t\t\t\tthis.colDaysNode.each(function (columnNode, i)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tvar columnDate = view.getDateByColumn(Math.floor(i / resources.length));\n// \t\t\t\t\t\t\tcolumnNode.toggleClass(\n// \t\t\t\t\t\t\t\tCSS_SCHEDULER_TODAY, !Y.DataType.DateMath.isDayOverlap(columnDate, todayDate));\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tthis.syncCurrentTimeUI();\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tsyncUI: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tSchedulerResourceDayView.superclass.syncUI.apply(this, arguments);\n// \t\t\t\t\t\tthis.gridContainer.attr('colspan', this.get('resources').length);\n// \t\t\t\t\t},\n//\n// \t\t\t\t\t_prepareEventCreation: function (event, duration)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tvar resourcenames = this.get('resourcenames');\n// \t\t\t\t\t\tvar clickLeftTop = this.getXYDelta(event),\n// \t\t\t\t\t\t\tcolNumber = toNumber(event.currentTarget.attr('data-colnumber')),\n// \t\t\t\t\t\t\tendDate,\n// \t\t\t\t\t\t\tstartDate = this.getDateByColumn(Math.floor(colNumber / resources.length)),\n// \t\t\t\t\t\t\trecorder = this.get('scheduler').get('eventRecorder');\n//\n// \t\t\t\t\t\tthis.startXY = [event.pageX, event.pageY];\n//\n// \t\t\t\t\t\tthis.roundToNearestHour(startDate, this.getYCoordTime(clickLeftTop[1]));\n//\n// \t\t\t\t\t\tif (!duration)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tduration = recorder.get('duration');\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tendDate = Y.DataType.DateMath.add(startDate, Y.DataType.DateMath.MINUTES, duration);\n//\n// \t\t\t\t\t\trecorder.move(startDate, {\n// \t\t\t\t\t\t\tsilent: true\n// \t\t\t\t\t\t});\n//\n// \t\t\t\t\t\trecorder.setAttrs({\n// \t\t\t\t\t\t\tallDay: false,\n// \t\t\t\t\t\t\tresource: resources[colNumber % resources.length],\n// \t\t\t\t\t\t\tresourcename: resourcenames[colNumber % resources.length],\n// \t\t\t\t\t\t\tendDate: endDate\n// \t\t\t\t\t\t}, {\n// \t\t\t\t\t\t\tsilent: true\n// \t\t\t\t\t\t});\n//\n// \t\t\t\t\t\tthis.creationStartDate = startDate;\n//\n// \t\t\t\t\t\tevent.halt();\n// \t\t\t\t\t},\n//\n// \t\t\t\t\t_valueColDaysNode: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar buffer = [];\n// \t\t\t\t\t\tvar colNumber = 0;\n// \t\t\t\t\t\tvar resourceIndex = 0;\n// \t\t\t\t\t\tfor (var r in this.get('resources'))\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tvar borderStyle = resourceIndex++ == 0 ? 'solid' : 'none';\n// \t\t\t\t\t\t\tbuffer.push(\n// \t\t\t\t\t\t\t\tY.Lang.sub(TPL_SCHEDULER_VIEW_DAY_TABLE_COLDAY, {\n// \t\t\t\t\t\t\t\t\tcolNumber: colNumber++,\n// \t\t\t\t\t\t\t\t\tborderStyle: borderStyle\n// \t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\treturn Y.NodeList.create(buffer.join(''));\n// \t\t\t\t\t},\n//\n// \t\t\t\t\t_valueColHeaderDaysNode: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar buffer = [];\n// \t\t\t\t\t\tvar colNumber = 0;\n// \t\t\t\t\t\tbuffer.push(TPL_SCHEDULER_VIEW_DAY_HEADER_DAY_FIRST);\n// \t\t\t\t\t\tbuffer.push(\n// \t\t\t\t\t\t\tY.Lang.sub(TPL_SCHEDULER_VIEW_DAY_HEADER_DAY, {\n// \t\t\t\t\t\t\t\tcolNumber: colNumber,\n// \t\t\t\t\t\t\t\tcolSpan: this.get('resources').length\n// \t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t);\n// \t\t\t\t\t\treturn Y.NodeList.create(buffer.join(''));\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\tvar SchedulerResourceWeekView = Y.Component.create({\n// \t\t\t\tNAME: 'scheduler-view-week-resource',\n// \t\t\t\tEXTENDS: Y.SchedulerWeekView,\n// \t\t\t\tATTRS: {\n// \t\t\t\t\tname: {\n// \t\t\t\t\t\tvalue: 'resources'\n// \t\t\t\t\t},\n// \t\t\t\t\tresources: {\n// \t\t\t\t\t\tvalue: [0]\n// \t\t\t\t\t},\n// \t\t\t\t\tresourcenames: {\n// \t\t\t\t\t\tvalue: ['Ingen']\n// \t\t\t\t\t}\n// \t\t\t\t},\n//\n// \t\t\t\tprototype: {\n// \t\t\t\t\tgetColumnShimByDateAndResource: function (date, resource)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tvar index = this.getDateDaysOffset(date) * resources.length + resources.indexOf(resource);\n// \t\t\t\t\t\tif (0 <= index && index < this.columnShims.size())\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\treturn this.columnShims.item(index);\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\treturn null;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tplotEvent: function (evt)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar nodeList = evt.get('node');\n// \t\t\t\t\t\tif (nodeList.size() < 2)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tevt.addPaddingNode();\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tvar node = evt.get('node').item(0);\n// \t\t\t\t\t\tvar paddingNode = evt.get('node').item(1);\n// \t\t\t\t\t\tvar shim = this.getColumnShimByDateAndResource(evt.get('startDate'), evt.get('resource'));\n// \t\t\t\t\t\tif (shim)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tshim.append(node);\n// \t\t\t\t\t\t\tif (evt.get('visible'))\n// \t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\tnode.show();\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tnode.hide();\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tevt.syncUI();\n// \t\t\t\t\t\tthis.syncEventTopUI(evt);\n// \t\t\t\t\t\tthis.syncEventHeightUI(evt);\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tplotEvents: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar scheduler = this.get('scheduler');\n// \t\t\t\t\t\tvar filterFn = this.get('filterFn');\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tscheduler.flushEvents();\n// \t\t\t\t\t\tvar view = this;\n// \t\t\t\t\t\tthis.columnShims.each(function (colShimNode, i)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tvar events = scheduler.getEventsByDay(view.getDateByColumn(Math.floor(i / resources.length)), true);\n// \t\t\t\t\t\t\tvar plottedEvents = [];\n// \t\t\t\t\t\t\tvar columnEvents = Y.Array.filter(\n// \t\t\t\t\t\t\t\tevents,\n// \t\t\t\t\t\t\t\tfunction (event)\n// \t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\treturn event.get('resource') === resources[i % resources.length];\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\tcolShimNode.empty();\n// \t\t\t\t\t\t\tY.Array.each(columnEvents, function (evt)\n// \t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\tif (filterFn.apply(view, [evt]))\n// \t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\tview.plotEvent(evt);\n// \t\t\t\t\t\t\t\t\tplottedEvents.push(evt);\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\tview.syncEventsIntersectionUI(plottedEvents);\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tthis.syncHeaderViewUI();\n// \t\t\t\t\t\tthis.syncCurrentTimeUI();\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tsyncColumnsUI: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tvar todayDate = this.get('scheduler').get('todayDate');\n// \t\t\t\t\t\tvar view = this;\n// \t\t\t\t\t\tthis.colDaysNode.each(function (columnNode, i)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tvar columnDate = view.getDateByColumn(Math.floor(i / resources.length));\n// \t\t\t\t\t\t\tcolumnNode.toggleClass(\n// \t\t\t\t\t\t\t\tCSS_SCHEDULER_TODAY, !Y.DataType.DateMath.isDayOverlap(columnDate, todayDate));\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tthis.syncCurrentTimeUI();\n// \t\t\t\t\t},\n//\n// \t\t\t\t\tsyncUI: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tSchedulerResourceWeekView.superclass.syncUI.apply(this, arguments);\n// \t\t\t\t\t\tthis.gridContainer.attr('colspan', this.get('resources').length * this.get('days'));\n// \t\t\t\t\t},\n//\n// \t\t\t\t\t_prepareEventCreation: function (event, duration)\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar resources = this.get('resources');\n// \t\t\t\t\t\tvar resourcenames = this.get('resourcenames');\n// \t\t\t\t\t\tvar clickLeftTop = this.getXYDelta(event),\n// \t\t\t\t\t\t\tcolNumber = toNumber(event.currentTarget.attr('data-colnumber')),\n// \t\t\t\t\t\t\tendDate,\n// \t\t\t\t\t\t\tstartDate = this.getDateByColumn(Math.floor(colNumber / resources.length)),\n// \t\t\t\t\t\t\trecorder = this.get('scheduler').get('eventRecorder');\n//\n// \t\t\t\t\t\tthis.startXY = [event.pageX, event.pageY];\n//\n// \t\t\t\t\t\tthis.roundToNearestHour(startDate, this.getYCoordTime(clickLeftTop[1]));\n//\n// \t\t\t\t\t\tif (!duration)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tduration = recorder.get('duration');\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tendDate = Y.DataType.DateMath.add(startDate, Y.DataType.DateMath.MINUTES, duration);\n//\n// \t\t\t\t\t\trecorder.move(startDate, {\n// \t\t\t\t\t\t\tsilent: true\n// \t\t\t\t\t\t});\n//\n// \t\t\t\t\t\trecorder.setAttrs({\n// \t\t\t\t\t\t\tallDay: false,\n// \t\t\t\t\t\t\tresource: resources[colNumber % resources.length],\n// \t\t\t\t\t\t\tresourcename: resourcenames[colNumber % resources.length],\n// \t\t\t\t\t\t\tendDate: endDate\n// \t\t\t\t\t\t}, {\n// \t\t\t\t\t\t\tsilent: true\n// \t\t\t\t\t\t});\n//\n// \t\t\t\t\t\tthis.creationStartDate = startDate;\n//\n// \t\t\t\t\t\tevent.halt();\n// \t\t\t\t\t},\n//\n// \t\t\t\t\t_valueColDaysNode: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar buffer = [];\n// \t\t\t\t\t\tvar colNumber = 0;\n// \t\t\t\t\t\tfor (i = 0; i < this.get('days'); i++)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tvar resourceIndex = 0;\n// \t\t\t\t\t\t\tfor (var r in this.get('resources'))\n// \t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\tvar borderStyle = resourceIndex++ == 0 ? 'solid' : 'none';\n// \t\t\t\t\t\t\t\tbuffer.push(\n// \t\t\t\t\t\t\t\t\tY.Lang.sub(TPL_SCHEDULER_VIEW_DAY_TABLE_COLDAY, {\n// \t\t\t\t\t\t\t\t\t\tcolNumber: colNumber++,\n// \t\t\t\t\t\t\t\t\t\tborderStyle: borderStyle\n// \t\t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\treturn Y.NodeList.create(buffer.join(''));\n// \t\t\t\t\t},\n//\n// \t\t\t\t\t_valueColHeaderDaysNode: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar buffer = [];\n// \t\t\t\t\t\tvar colNumber = 0;\n// \t\t\t\t\t\tbuffer.push(TPL_SCHEDULER_VIEW_DAY_HEADER_DAY_FIRST);\n// \t\t\t\t\t\tfor (i = 0; i < this.get('days'); i++)\n// \t\t\t\t\t\t{\n// \t\t\t\t\t\t\tbuffer.push(\n// \t\t\t\t\t\t\t\tY.Lang.sub(TPL_SCHEDULER_VIEW_DAY_HEADER_DAY, {\n// \t\t\t\t\t\t\t\t\tcolNumber: colNumber++ * this.get('resources').length,\n// \t\t\t\t\t\t\t\t\tcolSpan: this.get('resources').length\n// \t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\treturn Y.NodeList.create(buffer.join(''));\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\tvar SchedulerResourceEventRecorder = Y.Component.create({\n// \t\t\t\tNAME: 'scheduler-event-recorder-resource',\n// \t\t\t\tEXTENDS: Y.SchedulerEventRecorder,\n// \t\t\t\tATTRS: {\n// \t\t\t\t\tresource: {\n// \t\t\t\t\t\tvalue: 0\n// \t\t\t\t\t},\n// \t\t\t\t\tresourcename: {\n// \t\t\t\t\t\tvalue: 'Ingen'\n// \t\t\t\t\t}\n// \t\t\t\t},\n//\n// \t\t\t\tprototype: {\n// \t\t\t\t\tgetTemplateData: function ()\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvar instance = this,\n// \t\t\t\t\t\t\tstrings = instance.get('strings'),\n// \t\t\t\t\t\t\tevt = instance.get('event') || instance,\n// \t\t\t\t\t\t\tcontent = evt.get('content');\n//\n// \t\t\t\t\t\treturn {\n// \t\t\t\t\t\t\tcontent: content,\n// \t\t\t\t\t\t\tresource: evt.get('resource'),\n// \t\t\t\t\t\t\tresourcename: evt.get('resourcename'),\n// \t\t\t\t\t\t\tdate: instance.getFormattedDate(),\n// \t\t\t\t\t\t\tendDate: evt.get('endDate').getTime(),\n// \t\t\t\t\t\t\tstartDate: evt.get('startDate').getTime()\n// \t\t\t\t\t\t};\n// \t\t\t\t\t},\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\tvar nb_NO_strings_allDay = {allDay: 'Hel dag'};\n// \t\t\tvar strings = {\n// \t\t\t\tagenda: 'Agenda',\n// \t\t\t\tday: 'Dag',\n// \t\t\t\tmonth: 'Måned',\n// \t\t\t\ttoday: 'Idag',\n// \t\t\t\tweek: 'Uke',\n// \t\t\t\tyear: 'År'\n// \t\t\t};\n//\n// \t\t\tvar resourceslist = [parseInt(urlParams['id'])];\n// \t\t\tvar resourcenames = [resourcename];\n// \t\t\tvar initDateTime = new Date();\n// \t\t\tinitDateTime.setHours(07);\n// \t\t\tinitDateTime.setMinutes(00);\n//\n// \t\t\tvar resourceWeekView = new SchedulerResourceWeekView({\n// \t\t\t\tisoTime: true,\n// \t\t\t\tstrings: nb_NO_strings_allDay,\n// \t\t\t\theaderView: false,\n// \t\t\t\tresources: resourceslist,\n// \t\t\t\tresourcenames: resourcenames,\n// \t\t\t\tinitialScroll: new Date(initDateTime)\n// \t\t\t});\n//\n// \t\t\tvar resourceDayView = new SchedulerResourceDayView({\n// \t\t\t\tisoTime: true,\n// \t\t\t\tstrings: nb_NO_strings_allDay,\n// \t\t\t\theaderView: false,\n// \t\t\t\tresources: resourceslist,\n// \t\t\t\tresourcenames: resourcenames,\n// \t\t\t\tinitialScroll: new Date(initDateTime)\n// \t\t\t});\n//\n// \t\t\tvar eventRecorder = new SchedulerResourceEventRecorder({\n// \t\t\t\tcontent: \"\",\n// \t\t\t\theaderTemplate: lang['new application'],\n// \t\t\t\tbodyTemplate: lang['Resource (2018)'] + \": {resourcename}<br/>{date}\",\n// \t\t\t\tstrings: {save: 'Fortsett', cancel: \"Avbryt\", delete: \"Slett\"},\n// \t\t\t\ton: {\n// \t\t\t\t\tsave: function (event)\n// \t\t\t\t\t{\n// \t\t\t\t\t\t$(\".overlay\").show();\n// \t\t\t\t\t\tvar templatedata = this.getTemplateData();\n// \t\t\t\t\t\tForwardToNewApplication(templatedata.startDate, templatedata.endDate, templatedata.resource);\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\tnew Y.Scheduler({\n// \t\t\t\tboundingBox: '#myScheduler',\n// \t\t\t\teventRecorder: deactivate_application ? null : eventRecorder,\n// \t\t\t\tdate: date,\n// \t\t\t\titems: events,\n// \t\t\t\trender: true,\n// \t\t\t\tstrings: strings,\n// \t\t\t\tfirstDayOfWeek: 1,\n// \t\t\t\tviews: [resourceWeekView]\n// \t\t\t});\n//\n// \t\t\tnew Y.Scheduler({\n// \t\t\t\tboundingBox: '#mySchedulerSmallDeviceView',\n// \t\t\t\teventRecorder: deactivate_application ? null : eventRecorder,\n// \t\t\t\tdate: date,\n// \t\t\t\titems: events,\n// \t\t\t\trender: true,\n// \t\t\t\tstrings: strings,\n// \t\t\t\tviews: [resourceDayView]\n// \t\t\t});\n//\n// \t\t\t$('.tooltip').tooltip('hide');\n// \t\t\t$(\".scheduler-base-views\").hide();\n// \t\t\t$(\".scheduler-base-icon-prev\").addClass(\"fas fa-chevron-left\");\n// \t\t\t$(\".scheduler-base-icon-next\").addClass(\"fas fa-chevron-right\");\n//\n// \t\t\t$(\"[data-toggle='tooltip']\").tooltip();\n// \t\t\t$(\".overlay\").hide();\n// \t\t\t$(\".scheduler-view-day-current-time\").hide();\n//\n// \t\t\t$('.popover-title').remove();\n//\n// \t\t\t$(\".scheduler-base-nav-date\").remove();\n// \t\t\t$(\".scheduler-base-controls\").append(\"<div class='d-inline ml-2 weekNumber'>Uke \" + date.getWeek() + \"</div>\");\n// \t\t\t$(\".scheduler-base-controls\").append(\"<div class='d-inline ml-2 building_name'><h3>\" + $(\"#resource_name\").text() + \"</h3></div>\");\n// \t\t\t$(\".scheduler-event-title\").text(\"\");\n//\n// \t\t\t$(\".scheduler-event-disabled\").hover(function ()\n// \t\t\t{\n// \t\t\t\tif ($(\".tooltip\").length == 0 && $(\".scheduler-event-recorder\").length < 1)\n// \t\t\t\t{\n// \t\t\t\t\t$('.scheduler-event-disabled').tooltip({\n// \t\t\t\t\t\tdelay: 500,\n// \t\t\t\t\t\tplacement: \"right\",\n// \t\t\t\t\t\ttitle: tooltipDetails,\n// \t\t\t\t\t\thtml: true,\n// \t\t\t\t\t\ttrigger: 'manual'\n// \t\t\t\t\t});\n// \t\t\t\t\t$(this).tooltip('show');\n// \t\t\t\t}\n// \t\t\t\telse\n// \t\t\t\t{\n// \t\t\t\t\tif ($('.tooltip:hover').length === 0 && $(\".scheduler-event-recorder\").length < 1)\n// \t\t\t\t\t{\n// \t\t\t\t\t\t$('.tooltip').tooltip('hide');\n// \t\t\t\t\t\t$(this).tooltip('show');\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\t$(\".scheduler-event-disabled\").click(function ()\n// \t\t\t{\n// \t\t\t\t$('.tooltip').tooltip('hide');\n// \t\t\t\t$('.scheduler-event-disabled').tooltip({\n// \t\t\t\t\tdelay: 500,\n// \t\t\t\t\tplacement: \"right\",\n// \t\t\t\t\ttitle: tooltipDetails,\n// \t\t\t\t\thtml: true,\n// \t\t\t\t\ttrigger: \"click\"\n// \t\t\t\t});\n// \t\t\t\t$(this).tooltip('show');\n// \t\t\t});\n//\n// \t\t\t$(\".tooltip\").mouseleave(function ()\n// \t\t\t{\n// \t\t\t\t//$('.tooltip').tooltip('hide');\n// \t\t\t});\n//\n// \t\t\t$(\".scheduler-event-disabled\").mouseleave(function ()\n// \t\t\t{\n// \t\t\t\tif ($('.tooltip:hover').length === 0)\n// \t\t\t\t{\n// \t\t\t\t\t//$('.tooltip').tooltip('hide');\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\t$(\".scheduler-view-day-table-col\").hover(function ()\n// \t\t\t{\n// \t\t\t\tif ($(this).find('.scheduler-event-disabled').length == 0)\n// \t\t\t\t{\n// \t\t\t\t\t//$('.tooltip').tooltip('hide');\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t\t\t$(\".scheduler-view-day-table-col\").hover(function ()\n// \t\t\t{\n// \t\t\t\tif ($(\".scheduler-event-recorder\").length > 0)\n// \t\t\t\t{\n// \t\t\t\t\t$('.tooltip').tooltip('hide');\n// \t\t\t\t}\n// \t\t\t});\n// \t\t}\n// \t);\n// }\n//\n// YUI({lang: 'nb-no'}).use(\n// \t'aui-datepicker',\n// \tfunction (Y)\n// \t{\n// \t\tnew Y.DatePicker(\n// \t\t{\n// \t\t\ttrigger: '.datepicker-btn',\n// \t\t\tpopover: {\n// \t\t\t\tzIndex: 99999\n// \t\t\t},\n// \t\t\ton: {\n// \t\t\t\tselectionChange: function (event)\n// \t\t\t\t{\n// \t\t\t\t\tdate = new Date(event.newSelection);\n// \t\t\t\t\tPopulateCalendarEvents(baseURL, urlParams);\n//\n// \t\t\t\t\t//$(\"#myScheduler .scheduler-base-content\").first().remove();\n// \t\t\t\t\t//$(\"#mySchedulerSmallDeviceView .scheduler-base-content\").first().remove();\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\t);\n// \t}\n// );\n\n//# sourceURL=webpack://bookingfrontend_2/./src/pages/resource.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/pages/resource.js");
/******/ 	
/******/ })()
;