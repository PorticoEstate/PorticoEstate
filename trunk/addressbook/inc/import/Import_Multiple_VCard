<?php
/*
  This file defines a set of functions and an associative array.
  The key of the array corresponds to a header in the source
  import file and the value of the array item will be used in
  the creation of the output file.

  The array need not be in any order and any fields not defined will
  not be transferred.  If the val='+', the value will be appended to
  the previous field and any text after the '+' will be appended 
  before the value.  For example, the following would add a comma and
  a space between LastName and FirstName and store it in FullName:

 	array('LastName' => 'FullName','FirstName' => '+, ');

  Also start with a '#' symbol and a comma separated list will be
  turned into a number of the same entries.
*/
	class import_conv
	{
		var $currentrecord = array(); /* used for buffering to allow uid lines to go first */
		var $id;
		var $type = 'vcard';

		/* These will hold the class objects */
		var $contacts = '';
		var $vcard = '';

		/* This will be populated via the vcard->import var */
		var $import = array();

		function import_start_file($buffer)
		{
			$this->id = 0;
			$this->contacts = CreateObject('phpgwapi.contacts');
			$this->vcard = CreateObject('phpgwapi.vcard');
			$this->import = $this->vcard->import;
			return $buffer;
		}

		function import_start_record($buffer)
		{
			++$this->id;
			$this->currentrecord = array();
			return $buffer;
		}

		function import_new_attrib($buffer,$name,$value)
		{
			$line = $name . ':' . $value;
			$this->currentrecord += $this->vcard->parse_vcard_line($line);
			return $buffer;
		}

		function import_end_record($buffer)
		{
			$buffer[$this->id]='';
			//while ( list($name, $value) = each($this->currentrecord))
                        if (is_array($this->currentrecord))
                        {
                            foreach($this->currentrecord as $name => $value)
                            {
				$buffer[$this->id][$name] = $value;
				/* $buffer[$this->id]['private'] = $private; */
				/* echo '<br />'.$name.' => '.$value; */
                            }
                        }
			return $buffer;
		}

		function import_end_file($buffer,$access='private',$cat_id=0)
		{
			for ($i=1;$i<=count($buffer);$i++)
			{
				/*
				   Send the entire array to the vcard class in function.
				   It will parse the vcard fields and clean the array of extra
				   bogus values that get stuffed in.
				*/
				$entry = $this->vcard->in($buffer[$i]);
				$entry['owner'] = $GLOBALS['phpgw_info']['user']['account_id'];
				$entry['access'] = $access;
				$entry['categories'] = array($cat_id);

				/* Now actually add the new entry */
				$ab_id = $this->contacts->contact_import($entry);
			}
			$num = $i - 1;
			return lang('Successfully imported %1 records into your addressbook.',$num);
		}
	}